//
// File generated by rootcint at Thu Sep  3 00:34:03 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdIsrcdIWCLRootDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "WCLRootDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void WCSimRecoObjectTable_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRecoObjectTable*)
   {
      ::WCSimRecoObjectTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRecoObjectTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRecoObjectTable", ::WCSimRecoObjectTable::Class_Version(), "./include/WCSimRecoObjectTable.hh", 6,
                  typeid(::WCSimRecoObjectTable), DefineBehavior(ptr, ptr),
                  &::WCSimRecoObjectTable::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRecoObjectTable) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRecoObjectTable*)
   {
      return GenerateInitInstanceLocal((::WCSimRecoObjectTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRecoObjectTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRecoDigit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSimRecoDigit(void *p);
   static void deleteArray_WCSimRecoDigit(void *p);
   static void destruct_WCSimRecoDigit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRecoDigit*)
   {
      ::WCSimRecoDigit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRecoDigit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRecoDigit", ::WCSimRecoDigit::Class_Version(), "./include/WCSimRecoDigit.hh", 6,
                  typeid(::WCSimRecoDigit), DefineBehavior(ptr, ptr),
                  &::WCSimRecoDigit::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRecoDigit) );
      instance.SetDelete(&delete_WCSimRecoDigit);
      instance.SetDeleteArray(&deleteArray_WCSimRecoDigit);
      instance.SetDestructor(&destruct_WCSimRecoDigit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRecoDigit*)
   {
      return GenerateInitInstanceLocal((::WCSimRecoDigit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRecoDigit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void SandBoxPMTcoverage_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SandBoxPMTcoverage(void *p = 0);
   static void *newArray_SandBoxPMTcoverage(Long_t size, void *p);
   static void delete_SandBoxPMTcoverage(void *p);
   static void deleteArray_SandBoxPMTcoverage(void *p);
   static void destruct_SandBoxPMTcoverage(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::SandBoxPMTcoverage*)
   {
      ::SandBoxPMTcoverage *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SandBoxPMTcoverage >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SandBoxPMTcoverage", ::SandBoxPMTcoverage::Class_Version(), "./include/SandBoxPMTcoverage.hh", 6,
                  typeid(::SandBoxPMTcoverage), DefineBehavior(ptr, ptr),
                  &::SandBoxPMTcoverage::Dictionary, isa_proxy, 4,
                  sizeof(::SandBoxPMTcoverage) );
      instance.SetNew(&new_SandBoxPMTcoverage);
      instance.SetNewArray(&newArray_SandBoxPMTcoverage);
      instance.SetDelete(&delete_SandBoxPMTcoverage);
      instance.SetDeleteArray(&deleteArray_SandBoxPMTcoverage);
      instance.SetDestructor(&destruct_SandBoxPMTcoverage);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::SandBoxPMTcoverage*)
   {
      return GenerateInitInstanceLocal((::SandBoxPMTcoverage*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SandBoxPMTcoverage*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimTrueLight_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSimTrueLight(void *p);
   static void deleteArray_WCSimTrueLight(void *p);
   static void destruct_WCSimTrueLight(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimTrueLight*)
   {
      ::WCSimTrueLight *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimTrueLight >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimTrueLight", ::WCSimTrueLight::Class_Version(), "./include/WCSimTrueLight.hh", 7,
                  typeid(::WCSimTrueLight), DefineBehavior(ptr, ptr),
                  &::WCSimTrueLight::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimTrueLight) );
      instance.SetDelete(&delete_WCSimTrueLight);
      instance.SetDeleteArray(&deleteArray_WCSimTrueLight);
      instance.SetDestructor(&destruct_WCSimTrueLight);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimTrueLight*)
   {
      return GenerateInitInstanceLocal((::WCSimTrueLight*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimTrueLight*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimTruePart_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSimTruePart(void *p);
   static void deleteArray_WCSimTruePart(void *p);
   static void destruct_WCSimTruePart(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimTruePart*)
   {
      ::WCSimTruePart *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimTruePart >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimTruePart", ::WCSimTruePart::Class_Version(), "./include/WCSimTruePart.hh", 7,
                  typeid(::WCSimTruePart), DefineBehavior(ptr, ptr),
                  &::WCSimTruePart::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimTruePart) );
      instance.SetDelete(&delete_WCSimTruePart);
      instance.SetDeleteArray(&deleteArray_WCSimTruePart);
      instance.SetDestructor(&destruct_WCSimTruePart);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimTruePart*)
   {
      return GenerateInitInstanceLocal((::WCSimTruePart*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimTruePart*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimTrueCapture_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCSimTrueCapture(void *p);
   static void deleteArray_WCSimTrueCapture(void *p);
   static void destruct_WCSimTrueCapture(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimTrueCapture*)
   {
      ::WCSimTrueCapture *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimTrueCapture >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimTrueCapture", ::WCSimTrueCapture::Class_Version(), "./include/WCSimTrueCapture.hh", 7,
                  typeid(::WCSimTrueCapture), DefineBehavior(ptr, ptr),
                  &::WCSimTrueCapture::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimTrueCapture) );
      instance.SetDelete(&delete_WCSimTrueCapture);
      instance.SetDeleteArray(&deleteArray_WCSimTrueCapture);
      instance.SetDestructor(&destruct_WCSimTrueCapture);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimTrueCapture*)
   {
      return GenerateInitInstanceLocal((::WCSimTrueCapture*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimTrueCapture*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCLTreeReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCLTreeReader(void *p);
   static void deleteArray_WCLTreeReader(void *p);
   static void destruct_WCLTreeReader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCLTreeReader*)
   {
      ::WCLTreeReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCLTreeReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCLTreeReader", ::WCLTreeReader::Class_Version(), "./include/WCLTreeReader.hh", 15,
                  typeid(::WCLTreeReader), DefineBehavior(ptr, ptr),
                  &::WCLTreeReader::Dictionary, isa_proxy, 4,
                  sizeof(::WCLTreeReader) );
      instance.SetDelete(&delete_WCLTreeReader);
      instance.SetDeleteArray(&deleteArray_WCLTreeReader);
      instance.SetDestructor(&destruct_WCLTreeReader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCLTreeReader*)
   {
      return GenerateInitInstanceLocal((::WCLTreeReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCLTreeReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCLTreeWriter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WCLTreeWriter(void *p);
   static void deleteArray_WCLTreeWriter(void *p);
   static void destruct_WCLTreeWriter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCLTreeWriter*)
   {
      ::WCLTreeWriter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCLTreeWriter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCLTreeWriter", ::WCLTreeWriter::Class_Version(), "./include/WCLTreeWriter.hh", 17,
                  typeid(::WCLTreeWriter), DefineBehavior(ptr, ptr),
                  &::WCLTreeWriter::Dictionary, isa_proxy, 4,
                  sizeof(::WCLTreeWriter) );
      instance.SetDelete(&delete_WCLTreeWriter);
      instance.SetDeleteArray(&deleteArray_WCLTreeWriter);
      instance.SetDestructor(&destruct_WCLTreeWriter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCLTreeWriter*)
   {
      return GenerateInitInstanceLocal((::WCLTreeWriter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCLTreeWriter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WChRecoLite_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WChRecoLite*)
   {
      ::WChRecoLite *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WChRecoLite >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WChRecoLite", ::WChRecoLite::Class_Version(), "./include/WChRecoLite.hh", 34,
                  typeid(::WChRecoLite), DefineBehavior(ptr, ptr),
                  &::WChRecoLite::Dictionary, isa_proxy, 4,
                  sizeof(::WChRecoLite) );
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WChRecoLite*)
   {
      return GenerateInitInstanceLocal((::WChRecoLite*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WChRecoLite*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HighEReco_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HighEReco(void *p = 0);
   static void *newArray_HighEReco(Long_t size, void *p);
   static void delete_HighEReco(void *p);
   static void deleteArray_HighEReco(void *p);
   static void destruct_HighEReco(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HighEReco*)
   {
      ::HighEReco *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HighEReco >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HighEReco", ::HighEReco::Class_Version(), "./include/HighEReco.hh", 7,
                  typeid(::HighEReco), DefineBehavior(ptr, ptr),
                  &::HighEReco::Dictionary, isa_proxy, 4,
                  sizeof(::HighEReco) );
      instance.SetNew(&new_HighEReco);
      instance.SetNewArray(&newArray_HighEReco);
      instance.SetDelete(&delete_HighEReco);
      instance.SetDeleteArray(&deleteArray_HighEReco);
      instance.SetDestructor(&destruct_HighEReco);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HighEReco*)
   {
      return GenerateInitInstanceLocal((::HighEReco*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HighEReco*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LowEReco_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LowEReco(void *p = 0);
   static void *newArray_LowEReco(Long_t size, void *p);
   static void delete_LowEReco(void *p);
   static void deleteArray_LowEReco(void *p);
   static void destruct_LowEReco(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LowEReco*)
   {
      ::LowEReco *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LowEReco >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LowEReco", ::LowEReco::Class_Version(), "./include/LowEReco.hh", 6,
                  typeid(::LowEReco), DefineBehavior(ptr, ptr),
                  &::LowEReco::Dictionary, isa_proxy, 4,
                  sizeof(::LowEReco) );
      instance.SetNew(&new_LowEReco);
      instance.SetNewArray(&newArray_LowEReco);
      instance.SetDelete(&delete_LowEReco);
      instance.SetDeleteArray(&deleteArray_LowEReco);
      instance.SetDestructor(&destruct_LowEReco);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LowEReco*)
   {
      return GenerateInitInstanceLocal((::LowEReco*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LowEReco*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LikelihoodGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LikelihoodGenerator(void *p = 0);
   static void *newArray_LikelihoodGenerator(Long_t size, void *p);
   static void delete_LikelihoodGenerator(void *p);
   static void deleteArray_LikelihoodGenerator(void *p);
   static void destruct_LikelihoodGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LikelihoodGenerator*)
   {
      ::LikelihoodGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LikelihoodGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LikelihoodGenerator", ::LikelihoodGenerator::Class_Version(), "./include/LikelihoodGenerator.hh", 23,
                  typeid(::LikelihoodGenerator), DefineBehavior(ptr, ptr),
                  &::LikelihoodGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::LikelihoodGenerator) );
      instance.SetNew(&new_LikelihoodGenerator);
      instance.SetNewArray(&newArray_LikelihoodGenerator);
      instance.SetDelete(&delete_LikelihoodGenerator);
      instance.SetDeleteArray(&deleteArray_LikelihoodGenerator);
      instance.SetDestructor(&destruct_LikelihoodGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LikelihoodGenerator*)
   {
      return GenerateInitInstanceLocal((::LikelihoodGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LikelihoodGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
atomic_TClass_ptr WCSimRecoObjectTable::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRecoObjectTable::Class_Name()
{
   return "WCSimRecoObjectTable";
}

//______________________________________________________________________________
const char *WCSimRecoObjectTable::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoObjectTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRecoObjectTable::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoObjectTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRecoObjectTable::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoObjectTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRecoObjectTable::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoObjectTable*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr WCSimRecoDigit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRecoDigit::Class_Name()
{
   return "WCSimRecoDigit";
}

//______________________________________________________________________________
const char *WCSimRecoDigit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoDigit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRecoDigit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoDigit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRecoDigit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoDigit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRecoDigit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRecoDigit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SandBoxPMTcoverage::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SandBoxPMTcoverage::Class_Name()
{
   return "SandBoxPMTcoverage";
}

//______________________________________________________________________________
const char *SandBoxPMTcoverage::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SandBoxPMTcoverage*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SandBoxPMTcoverage::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SandBoxPMTcoverage*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SandBoxPMTcoverage::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SandBoxPMTcoverage*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SandBoxPMTcoverage::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SandBoxPMTcoverage*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr WCSimTrueLight::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimTrueLight::Class_Name()
{
   return "WCSimTrueLight";
}

//______________________________________________________________________________
const char *WCSimTrueLight::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueLight*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimTrueLight::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueLight*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimTrueLight::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueLight*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimTrueLight::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueLight*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr WCSimTruePart::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimTruePart::Class_Name()
{
   return "WCSimTruePart";
}

//______________________________________________________________________________
const char *WCSimTruePart::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTruePart*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimTruePart::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTruePart*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimTruePart::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTruePart*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimTruePart::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTruePart*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr WCSimTrueCapture::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimTrueCapture::Class_Name()
{
   return "WCSimTrueCapture";
}

//______________________________________________________________________________
const char *WCSimTrueCapture::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueCapture*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimTrueCapture::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueCapture*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimTrueCapture::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueCapture*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimTrueCapture::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimTrueCapture*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr WCLTreeReader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WCLTreeReader::Class_Name()
{
   return "WCLTreeReader";
}

//______________________________________________________________________________
const char *WCLTreeReader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCLTreeReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCLTreeReader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCLTreeReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCLTreeReader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCLTreeReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCLTreeReader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCLTreeReader*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr WCLTreeWriter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WCLTreeWriter::Class_Name()
{
   return "WCLTreeWriter";
}

//______________________________________________________________________________
const char *WCLTreeWriter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCLTreeWriter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCLTreeWriter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCLTreeWriter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCLTreeWriter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCLTreeWriter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCLTreeWriter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCLTreeWriter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr WChRecoLite::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WChRecoLite::Class_Name()
{
   return "WChRecoLite";
}

//______________________________________________________________________________
const char *WChRecoLite::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WChRecoLite*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WChRecoLite::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WChRecoLite*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WChRecoLite::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WChRecoLite*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WChRecoLite::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WChRecoLite*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HighEReco::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HighEReco::Class_Name()
{
   return "HighEReco";
}

//______________________________________________________________________________
const char *HighEReco::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HighEReco*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HighEReco::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HighEReco*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HighEReco::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HighEReco*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HighEReco::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HighEReco*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr LowEReco::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LowEReco::Class_Name()
{
   return "LowEReco";
}

//______________________________________________________________________________
const char *LowEReco::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LowEReco*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LowEReco::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LowEReco*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LowEReco::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LowEReco*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LowEReco::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LowEReco*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr LikelihoodGenerator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LikelihoodGenerator::Class_Name()
{
   return "LikelihoodGenerator";
}

//______________________________________________________________________________
const char *LikelihoodGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LikelihoodGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LikelihoodGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LikelihoodGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LikelihoodGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LikelihoodGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LikelihoodGenerator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LikelihoodGenerator*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void WCSimRecoObjectTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRecoObjectTable.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRecoObjectTable::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRecoObjectTable::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRecoObjectTable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRecoObjectTable.
      TClass *R__cl = ::WCSimRecoObjectTable::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numDigits", &numDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numClusters", &numClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numClusterDigits", &numClusterDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numVertices", &numVertices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numRings", &numRings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numEvents", &numEvents);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
} // end of namespace ROOT for class ::WCSimRecoObjectTable

//______________________________________________________________________________
void WCSimRecoDigit::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRecoDigit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRecoDigit::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRecoDigit::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRecoDigit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRecoDigit.
      TClass *R__cl = ::WCSimRecoDigit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRegion", &fRegion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawTime", &fRawTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawQPEs", &fRawQPEs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalTime", &fCalTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalQPEs", &fCalQPEs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawPEtube", &fRawPEtube);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsFiltered", &fIsFiltered);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimRecoDigit(void *p) {
      delete ((::WCSimRecoDigit*)p);
   }
   static void deleteArray_WCSimRecoDigit(void *p) {
      delete [] ((::WCSimRecoDigit*)p);
   }
   static void destruct_WCSimRecoDigit(void *p) {
      typedef ::WCSimRecoDigit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRecoDigit

//______________________________________________________________________________
void WChRecoLite::Streamer(TBuffer &R__b)
{
   // Stream an object of class WChRecoLite.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WChRecoLite::Class(),this);
   } else {
      R__b.WriteClassBuffer(WChRecoLite::Class(),this);
   }
}

//______________________________________________________________________________
void WChRecoLite::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WChRecoLite.
      TClass *R__cl = ::WChRecoLite::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R_SPHERE", &R_SPHERE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R_LENGTH", &R_LENGTH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N_REF", &N_REF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "C_VAC", &C_VAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NSeedsTarget", &NSeedsTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TSIGMA", &TSIGMA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaseFOM", &fBaseFOM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "meanTime", &meanTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "seedTime", &seedTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDigits", &fNDigits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThisDigit", &fThisDigit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastEntry", &fLastEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCounter", &fCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinTime", &fMinTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDigitX", (void*)&fDigitX);
      R__insp.InspectMember("vector<double>", (void*)&fDigitX, "fDigitX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDigitY", (void*)&fDigitY);
      R__insp.InspectMember("vector<double>", (void*)&fDigitY, "fDigitY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDigitZ", (void*)&fDigitZ);
      R__insp.InspectMember("vector<double>", (void*)&fDigitZ, "fDigitZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDigitT", (void*)&fDigitT);
      R__insp.InspectMember("vector<double>", (void*)&fDigitT, "fDigitT.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDigitQ", (void*)&fDigitQ);
      R__insp.InspectMember("vector<double>", (void*)&fDigitQ, "fDigitQ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDigitPE", (void*)&fDigitPE);
      R__insp.InspectMember("vector<double>", (void*)&fDigitPE, "fDigitPE.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDigitW", (void*)&fDigitW);
      R__insp.InspectMember("vector<double>", (void*)&fDigitW, "fDigitW.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDigitV", (void*)&fDigitV);
      R__insp.InspectMember("vector<double>", (void*)&fDigitV, "fDigitV.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDelta", (void*)&fDelta);
      R__insp.InspectMember("vector<double>", (void*)&fDelta, "fDelta.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "INDEX", (void*)&INDEX);
      R__insp.InspectMember("map<int,double>", (void*)&INDEX, "INDEX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RND", &RND);
      R__insp.InspectMember(RND, "RND.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vSeedVtxX", (void*)&vSeedVtxX);
      R__insp.InspectMember("vector<double>", (void*)&vSeedVtxX, "vSeedVtxX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vSeedVtxY", (void*)&vSeedVtxY);
      R__insp.InspectMember("vector<double>", (void*)&vSeedVtxY, "vSeedVtxY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vSeedVtxZ", (void*)&vSeedVtxZ);
      R__insp.InspectMember("vector<double>", (void*)&vSeedVtxZ, "vSeedVtxZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vSeedVtxTime", (void*)&vSeedVtxTime);
      R__insp.InspectMember("vector<double>", (void*)&vSeedVtxTime, "vSeedVtxTime.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vSeedDigitList", (void*)&vSeedDigitList);
      R__insp.InspectMember("vector<int>", (void*)&vSeedDigitList, "vSeedDigitList.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
} // end of namespace ROOT for class ::WChRecoLite

//______________________________________________________________________________
void WCLTreeReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCLTreeReader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCLTreeReader::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCLTreeReader::Class(),this);
   }
}

//______________________________________________________________________________
void WCLTreeReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCLTreeReader.
      TClass *R__cl = ::WCLTreeReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChainT", &fChainT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pmtChain", &pmtChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fincgen", &fincgen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMTs", &fPMTs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tf", &tf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*evttree", &evttree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_xStart", &phot_xStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_yStart", &phot_yStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_zStart", &phot_zStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_tStart", &phot_tStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_xEnd", &phot_xEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_yEnd", &phot_yEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_zEnd", &phot_zEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_tEnd", &phot_tEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_wavelength", &phot_wavelength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_processStart", &phot_processStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_isScat", &phot_isScat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_parentid", &phot_parentid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_trackid", &phot_trackid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_hit", &phot_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_capnum", &phot_capnum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_xStart", &part_xStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_yStart", &part_yStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_zStart", &part_zStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_tStart", &part_tStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_xEnd", &part_xEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_yEnd", &part_yEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_zEnd", &part_zEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_tEnd", &part_tEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_KEstart", &part_KEstart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_KEend", &part_KEend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pxStart", &part_pxStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pyStart", &part_pyStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pzStart", &part_pzStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pxEnd", &part_pxEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pyEnd", &part_pyEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pzEnd", &part_pzEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_processStart", &part_processStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_processEnd", &part_processEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_parentid", &part_parentid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_trackid", &part_trackid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pid", &part_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_num", &capt_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_nucleus", &capt_nucleus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_pid", &capt_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_nphot", &capt_nphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_ngamma", &capt_ngamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_x", &capt_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_y", &capt_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_z", &capt_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_t0", &capt_t0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_E", &capt_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventcount", &eventcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nphot", &nphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "npart", &npart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ncapturecount", &ncapturecount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutroncount", &neutroncount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt_id", &pmt_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "is_lappd", &is_lappd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt_pos_x", &pmt_pos_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt_pos_y", &pmt_pos_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt_pos_z", &pmt_pos_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt_size", &pmt_size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt_qe", &pmt_qe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt_time_res", &pmt_time_res);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hit_time", &hit_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hit_x", &hit_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hit_y", &hit_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hit_z", &hit_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hit_PMTid", &hit_PMTid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tcf", &tcf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tcardtree", &tcardtree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mevt", &mevt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntrks", &ntrks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nneutrons", &nneutrons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmode", &mmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbeam_id", &mbeam_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nMRDlayers", &nMRDlayers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvtxx", &mvtxx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvtxy", &mvtxy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvtxz", &mvtxz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mE", &mE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbeam_px", &mbeam_px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbeam_py", &mbeam_py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbeam_pz", &mbeam_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMRDtotEdep", &mMRDtotEdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMRDtotEchdep", &mMRDtotEchdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mpid", &mpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitlayer", &mMRDhitlayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitorientation", &mMRDhitorientation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mpx", &mpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mpy", &mpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mpz", &mpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mKE", &mKE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitEdep", &mMRDhitEdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitEchdep", &mMRDhitEchdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitx", &mMRDhitx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhity", &mMRDhity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitz", &mMRDhitz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nhits", &nhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_PMTid", &phot_PMTid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_hit", &x_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y_hit", &y_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z_hit", &z_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "true_time", &true_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "true_time_corrected", &true_time_corrected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "photon_wavelength", &photon_wavelength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "process", &process);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtID", &evtID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pidd", &pidd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mprocessStart", &mprocessStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mtrackID", &mtrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mparentID", &mparentID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mprocessStep", &mprocessStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_x", &pos_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_y", &pos_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_z", &pos_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir_x", &dir_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir_y", &dir_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir_z", &dir_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tt", &tt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Et", &Et);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ekin", &Ekin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outfile", &outfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outtree", &outtree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*truetree", &truetree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*textout", &textout);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCLTreeReader(void *p) {
      delete ((::WCLTreeReader*)p);
   }
   static void deleteArray_WCLTreeReader(void *p) {
      delete [] ((::WCLTreeReader*)p);
   }
   static void destruct_WCLTreeReader(void *p) {
      typedef ::WCLTreeReader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCLTreeReader

//______________________________________________________________________________
void WCLTreeWriter::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCLTreeWriter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCLTreeWriter::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCLTreeWriter::Class(),this);
   }
}

//______________________________________________________________________________
void WCLTreeWriter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCLTreeWriter.
      TClass *R__cl = ::WCLTreeWriter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*thisphot", &thisphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fmode", &fmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNewEvent", &fNewEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tf", &tf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*evttree", &evttree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_xStart", &phot_xStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_yStart", &phot_yStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_zStart", &phot_zStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_tStart", &phot_tStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_xEnd", &phot_xEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_yEnd", &phot_yEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_zEnd", &phot_zEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_tEnd", &phot_tEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_wavelength", &phot_wavelength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_processStart", &phot_processStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_isScat", &phot_isScat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_parentid", &phot_parentid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_trackid", &phot_trackid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_hit", &phot_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_capnum", &phot_capnum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_xStart", &part_xStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_yStart", &part_yStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_zStart", &part_zStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_tStart", &part_tStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_xEnd", &part_xEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_yEnd", &part_yEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_zEnd", &part_zEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_tEnd", &part_tEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_KEstart", &part_KEstart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_KEend", &part_KEend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pxStart", &part_pxStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pyStart", &part_pyStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pzStart", &part_pzStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pxEnd", &part_pxEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pyEnd", &part_pyEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pzEnd", &part_pzEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_processStart", &part_processStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_processEnd", &part_processEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_parentid", &part_parentid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_trackid", &part_trackid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*part_pid", &part_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_num", &capt_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_nucleus", &capt_nucleus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_pid", &capt_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_nphot", &capt_nphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_ngamma", &capt_ngamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_x", &capt_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_y", &capt_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_z", &capt_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_t0", &capt_t0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*capt_E", &capt_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventcount", &eventcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nphot", &nphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "npart", &npart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ncapturecount", &ncapturecount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutroncount", &neutroncount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tcf", &tcf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tcardtree", &tcardtree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mevt", &mevt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntrks", &ntrks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nneutrons", &nneutrons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmode", &mmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbeam_id", &mbeam_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nMRDlayers", &nMRDlayers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvtxx", &mvtxx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvtxy", &mvtxy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvtxz", &mvtxz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mE", &mE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbeam_px", &mbeam_px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbeam_py", &mbeam_py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbeam_pz", &mbeam_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMRDtotEdep", &mMRDtotEdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMRDtotEchdep", &mMRDtotEchdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mpid", &mpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitlayer", &mMRDhitlayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitorientation", &mMRDhitorientation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mpx", &mpx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mpy", &mpy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mpz", &mpz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mKE", &mKE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitEdep", &mMRDhitEdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitEchdep", &mMRDhitEchdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitx", &mMRDhitx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhity", &mMRDhity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMRDhitz", &mMRDhitz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nhits", &nhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*phot_PMTid", &phot_PMTid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_hit", &x_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y_hit", &y_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z_hit", &z_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "true_time", &true_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "true_time_corrected", &true_time_corrected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "photon_wavelength", &photon_wavelength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "process", &process);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtID", &evtID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pidd", &pidd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mprocessStart", &mprocessStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mtrackID", &mtrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mparentID", &mparentID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mprocessStep", &mprocessStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_x", &pos_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_y", &pos_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_z", &pos_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir_x", &dir_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir_y", &dir_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir_z", &dir_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tt", &tt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Et", &Et);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ekin", &Ekin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hit_time", &hit_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hit_x", &hit_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hit_y", &hit_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hit_z", &hit_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hit_PMTid", &hit_PMTid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt_id", &pmt_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "is_lappd", &is_lappd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt_pos_x", &pmt_pos_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt_pos_y", &pmt_pos_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt_pos_z", &pmt_pos_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt_size", &pmt_size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt_qe", &pmt_qe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt_time_res", &pmt_time_res);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outfile", &outfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outtree", &outtree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*truetree", &truetree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pmtTree", &pmtTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*textout", &textout);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCLTreeWriter(void *p) {
      delete ((::WCLTreeWriter*)p);
   }
   static void deleteArray_WCLTreeWriter(void *p) {
      delete [] ((::WCLTreeWriter*)p);
   }
   static void destruct_WCLTreeWriter(void *p) {
      typedef ::WCLTreeWriter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCLTreeWriter

//______________________________________________________________________________
void SandBoxPMTcoverage::Streamer(TBuffer &R__b)
{
   // Stream an object of class SandBoxPMTcoverage.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SandBoxPMTcoverage::Class(),this);
   } else {
      R__b.WriteClassBuffer(SandBoxPMTcoverage::Class(),this);
   }
}

//______________________________________________________________________________
void SandBoxPMTcoverage::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SandBoxPMTcoverage.
      TClass *R__cl = ::SandBoxPMTcoverage::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NLAPPDs_per_rowcolumn", &NLAPPDs_per_rowcolumn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_mmode[7]", _mmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_PMTs_per_row[7]", _PMTs_per_row);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_PMTs_per_column[7]", _PMTs_per_column);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_QE_PMT[7]", _QE_PMT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_QE_WAVELENGTHS_PMT[7][20]", _QE_WAVELENGTHS_PMT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_QE_FACTOR_PMT[7][20]", _QE_FACTOR_PMT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_PMTs_mshape[7]", _PMTs_mshape);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_PMTs_msize[7]", _PMTs_msize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_LAPPDs_per_row[7]", _LAPPDs_per_row);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_LAPPDs_per_column[7]", _LAPPDs_per_column);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_QE_LAPPD[7]", _QE_LAPPD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_LAPPDs_mshape[7]", _LAPPDs_mshape);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_LAPPDs_msize[7]", _LAPPDs_msize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_xl", &_xl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_yl", &_yl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_zl", &_zl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_xh", &_xh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_yh", &_yh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_zh", &_zh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_opt", &_opt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_Rh", &_Rh);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_SandBoxPMTcoverage(void *p) {
      return  p ? new(p) ::SandBoxPMTcoverage : new ::SandBoxPMTcoverage;
   }
   static void *newArray_SandBoxPMTcoverage(Long_t nElements, void *p) {
      return p ? new(p) ::SandBoxPMTcoverage[nElements] : new ::SandBoxPMTcoverage[nElements];
   }
   // Wrapper around operator delete
   static void delete_SandBoxPMTcoverage(void *p) {
      delete ((::SandBoxPMTcoverage*)p);
   }
   static void deleteArray_SandBoxPMTcoverage(void *p) {
      delete [] ((::SandBoxPMTcoverage*)p);
   }
   static void destruct_SandBoxPMTcoverage(void *p) {
      typedef ::SandBoxPMTcoverage current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::SandBoxPMTcoverage

//______________________________________________________________________________
void WCSimTrueLight::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimTrueLight.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimTrueLight::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimTrueLight::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimTrueLight::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimTrueLight.
      TClass *R__cl = ::WCSimTrueLight::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXs", &fXs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYs", &fYs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZs", &fZs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTs", &fTs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXe", &fXe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYe", &fYe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZe", &fZe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTe", &fTe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWavelength", &fWavelength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fisScattered", &fisScattered);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fisHit", &fisHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fprocessStart", &fprocessStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fparentID", &fparentID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftrackID", &ftrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMTID", &fPMTID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fcaptNum", &fcaptNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThet", &fThet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP1", &fP1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP2", &fP2);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimTrueLight(void *p) {
      delete ((::WCSimTrueLight*)p);
   }
   static void deleteArray_WCSimTrueLight(void *p) {
      delete [] ((::WCSimTrueLight*)p);
   }
   static void destruct_WCSimTrueLight(void *p) {
      typedef ::WCSimTrueLight current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimTrueLight

//______________________________________________________________________________
void WCSimTruePart::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimTruePart.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimTruePart::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimTruePart::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimTruePart::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimTruePart.
      TClass *R__cl = ::WCSimTruePart::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXs", &fXs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYs", &fYs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZs", &fZs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTs", &fTs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXe", &fXe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYe", &fYe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZe", &fZe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTe", &fTe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPXs", &fPXs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPYs", &fPYs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPZs", &fPZs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPXe", &fPXe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPYe", &fPYe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPZe", &fPZe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKEs", &fKEs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKEe", &fKEe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fprocessStart", &fprocessStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fprocessEnd", &fprocessEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fparentID", &fparentID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftrackID", &ftrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPID", &fPID);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimTruePart(void *p) {
      delete ((::WCSimTruePart*)p);
   }
   static void deleteArray_WCSimTruePart(void *p) {
      delete [] ((::WCSimTruePart*)p);
   }
   static void destruct_WCSimTruePart(void *p) {
      typedef ::WCSimTruePart current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimTruePart

//______________________________________________________________________________
void WCSimTrueCapture::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimTrueCapture.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimTrueCapture::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimTrueCapture::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimTrueCapture::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimTrueCapture.
      TClass *R__cl = ::WCSimTrueCapture::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT", &fT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fE", &fE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCnum", &fCnum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCnucl", &fCnucl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNgamma", &fNgamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNphot", &fNphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPID", &fPID);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WCSimTrueCapture(void *p) {
      delete ((::WCSimTrueCapture*)p);
   }
   static void deleteArray_WCSimTrueCapture(void *p) {
      delete [] ((::WCSimTrueCapture*)p);
   }
   static void destruct_WCSimTrueCapture(void *p) {
      typedef ::WCSimTrueCapture current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimTrueCapture

//______________________________________________________________________________
void HighEReco::Streamer(TBuffer &R__b)
{
   // Stream an object of class HighEReco.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HighEReco::Class(),this);
   } else {
      R__b.WriteClassBuffer(HighEReco::Class(),this);
   }
}

//______________________________________________________________________________
void HighEReco::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HighEReco.
      TClass *R__cl = ::HighEReco::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hitPMTx", &hitPMTx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hitPMTy", &hitPMTy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hitPMTz", &hitPMTz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hitPMTDirX", &hitPMTDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hitPMTDirY", &hitPMTDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hitPMTDirZ", &hitPMTDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hitPMTTimeRes", &hitPMTTimeRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hitPMTPEs", &hitPMTPEs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHitPMT", &nHitPMT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*unhitPMTx", &unhitPMTx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*unhitPMTy", &unhitPMTy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*unhitPMTz", &unhitPMTz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*unhitPMTDirX", &unhitPMTDirX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*unhitPMTDirY", &unhitPMTDirY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*unhitPMTDirZ", &unhitPMTDirZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*unhitPMTTimeRes", &unhitPMTTimeRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nUnhitPMT", &nUnhitPMT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hitT", &hitT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hitRing", &hitRing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hitPMT", &hitPMT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPEs", &nPEs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*electronPhotons", &electronPhotons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*muonPhotons", &muonPhotons);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*electronTimes", &electronTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*muonTimes", &muonTimes);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HighEReco(void *p) {
      return  p ? new(p) ::HighEReco : new ::HighEReco;
   }
   static void *newArray_HighEReco(Long_t nElements, void *p) {
      return p ? new(p) ::HighEReco[nElements] : new ::HighEReco[nElements];
   }
   // Wrapper around operator delete
   static void delete_HighEReco(void *p) {
      delete ((::HighEReco*)p);
   }
   static void deleteArray_HighEReco(void *p) {
      delete [] ((::HighEReco*)p);
   }
   static void destruct_HighEReco(void *p) {
      typedef ::HighEReco current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HighEReco

//______________________________________________________________________________
void LowEReco::Streamer(TBuffer &R__b)
{
   // Stream an object of class LowEReco.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LowEReco::Class(),this);
   } else {
      R__b.WriteClassBuffer(LowEReco::Class(),this);
   }
}

//______________________________________________________________________________
void LowEReco::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LowEReco.
      TClass *R__cl = ::LowEReco::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_LowEReco(void *p) {
      return  p ? new(p) ::LowEReco : new ::LowEReco;
   }
   static void *newArray_LowEReco(Long_t nElements, void *p) {
      return p ? new(p) ::LowEReco[nElements] : new ::LowEReco[nElements];
   }
   // Wrapper around operator delete
   static void delete_LowEReco(void *p) {
      delete ((::LowEReco*)p);
   }
   static void deleteArray_LowEReco(void *p) {
      delete [] ((::LowEReco*)p);
   }
   static void destruct_LowEReco(void *p) {
      typedef ::LowEReco current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LowEReco

//______________________________________________________________________________
void LikelihoodGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class LikelihoodGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LikelihoodGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(LikelihoodGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void LikelihoodGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LikelihoodGenerator.
      TClass *R__cl = ::LikelihoodGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPDF", &hPDF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPhotonCount", &hPhotonCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTime", &hTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &fCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evt", &evt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nphot", &nphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "npart", &npart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ncapturecount", &ncapturecount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutroncount", &neutroncount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phot_xStart[10000000]", phot_xStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phot_yStart[10000000]", phot_yStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phot_zStart[10000000]", phot_zStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phot_tStart[10000000]", phot_tStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phot_xEnd[10000000]", phot_xEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phot_yEnd[10000000]", phot_yEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phot_zEnd[10000000]", phot_zEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phot_tEnd[10000000]", phot_tEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phot_wavelength[10000000]", phot_wavelength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phot_processStart[10000000]", phot_processStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phot_isScat[10000000]", phot_isScat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phot_parentid[10000000]", phot_parentid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phot_trackid[10000000]", phot_trackid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phot_hit[10000000]", phot_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phot_capnum[10000000]", phot_capnum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_xStart[10000]", part_xStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_yStart[10000]", part_yStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_zStart[10000]", part_zStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_tStart[10000]", part_tStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_xEnd[10000]", part_xEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_yEnd[10000]", part_yEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_zEnd[10000]", part_zEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_tEnd[10000]", part_tEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_pxStart[10000]", part_pxStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_pyStart[10000]", part_pyStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_pzStart[10000]", part_pzStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_pxEnd[10000]", part_pxEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_pyEnd[10000]", part_pyEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_pzEnd[10000]", part_pzEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_KEstart[10000]", part_KEstart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_KEend[10000]", part_KEend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_processStart[10000]", part_processStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_processEnd[10000]", part_processEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_parentid[10000]", part_parentid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_trackid[10000]", part_trackid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part_pid[10000]", part_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "capt_x[2]", capt_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "capt_y[2]", capt_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "capt_z[2]", capt_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "capt_t0[2]", capt_t0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "capt_E[2]", capt_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "capt_num[2]", capt_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "capt_pid[2]", capt_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "capt_nucleus[2]", capt_nucleus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "capt_nphot[2]", capt_nphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "capt_ngamma[2]", capt_ngamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_evt", &b_evt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_nphot", &b_nphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_npart", &b_npart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_ncapturecount", &b_ncapturecount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_neutroncount", &b_neutroncount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phot_xStart", &b_phot_xStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phot_yStart", &b_phot_yStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phot_zStart", &b_phot_zStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phot_tStart", &b_phot_tStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phot_xEnd", &b_phot_xEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phot_yEnd", &b_phot_yEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phot_zEnd", &b_phot_zEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phot_tEnd", &b_phot_tEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phot_wavelength", &b_phot_wavelength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phot_processStart", &b_phot_processStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phot_isScat", &b_phot_isScat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phot_parentid", &b_phot_parentid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phot_trackid", &b_phot_trackid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phot_hit", &b_phot_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_phot_capnum", &b_phot_capnum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_xStart", &b_part_xStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_yStart", &b_part_yStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_zStart", &b_part_zStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_tStart", &b_part_tStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_xEnd", &b_part_xEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_yEnd", &b_part_yEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_zEnd", &b_part_zEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_tEnd", &b_part_tEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_pxStart", &b_part_pxStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_pyStart", &b_part_pyStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_pzStart", &b_part_pzStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_pxEnd", &b_part_pxEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_pyEnd", &b_part_pyEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_pzEnd", &b_part_pzEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_KEstart", &b_part_KEstart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_KEend", &b_part_KEend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_processStart", &b_part_processStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_processEnd", &b_part_processEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_parentid", &b_part_parentid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_trackid", &b_part_trackid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_part_pid", &b_part_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_capt_x", &b_capt_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_capt_y", &b_capt_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_capt_z", &b_capt_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_capt_t0", &b_capt_t0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_capt_E", &b_capt_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_capt_num", &b_capt_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_capt_pid", &b_capt_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_capt_nucleus", &b_capt_nucleus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_capt_nphot", &b_capt_nphot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*b_capt_ngamma", &b_capt_ngamma);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_LikelihoodGenerator(void *p) {
      return  p ? new(p) ::LikelihoodGenerator : new ::LikelihoodGenerator;
   }
   static void *newArray_LikelihoodGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::LikelihoodGenerator[nElements] : new ::LikelihoodGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_LikelihoodGenerator(void *p) {
      delete ((::LikelihoodGenerator*)p);
   }
   static void deleteArray_LikelihoodGenerator(void *p) {
      delete [] ((::LikelihoodGenerator*)p);
   }
   static void destruct_LikelihoodGenerator(void *p) {
      typedef ::LikelihoodGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LikelihoodGenerator

/********************************************************
* ./src/WCLRootDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableWCLRootDict();

extern "C" void G__set_cpp_environmentWCLRootDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("WCSimRecoObjectTable.hh");
  G__add_compiledheader("WCSimRecoDigit.hh");
  G__add_compiledheader("SandBoxPMTcoverage.hh");
  G__add_compiledheader("WCSimTrueLight.hh");
  G__add_compiledheader("WCSimTruePart.hh");
  G__add_compiledheader("WCSimTrueCapture.hh");
  G__add_compiledheader("WCLTreeReader.hh");
  G__add_compiledheader("WCLTreeWriter.hh");
  G__add_compiledheader("WChRecoLite.hh");
  G__add_compiledheader("HighEReco.hh");
  G__add_compiledheader("LowEReco.hh");
  G__add_compiledheader("LikelihoodGenerator.hh");
  G__cpp_reset_tagtableWCLRootDict();
}
#include <new>
extern "C" int G__cpp_dllrevWCLRootDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* WCSimRecoObjectTable */
static int G__WCLRootDict_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoObjectTable::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewDigit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteDigit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewCluster();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteCluster();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewClusterDigit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteClusterDigit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfClusterDigits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfVertices());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewRing();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteRing();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfRings());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->NewEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->DeleteEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoObjectTable*) G__getstructoffset())->NumberOfEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoObjectTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoObjectTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRecoObjectTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRecoObjectTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoObjectTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoObjectTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoObjectTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoObjectTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_168_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoObjectTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_168_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRecoObjectTable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRecoObjectTable(*(WCSimRecoObjectTable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_168_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoObjectTable* dest = (WCSimRecoObjectTable*) G__getstructoffset();
   *dest = *(WCSimRecoObjectTable*) libp->para[0].ref;
   const WCSimRecoObjectTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRecoDigit */
static int G__WCLRootDict_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoDigit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimRecoDigit(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) WCSimRecoDigit(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoDigit*) G__getstructoffset())->GetRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetRawTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetRawQPEs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimRecoDigit*) G__getstructoffset())->GetQPEs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRecoDigit*) G__getstructoffset())->GetRawPEtube());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRecoDigit*) G__getstructoffset())->IsFiltered());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((WCSimRecoDigit*) G__getstructoffset())->SetFilter((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((WCSimRecoDigit*) G__getstructoffset())->SetFilter();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoDigit*) G__getstructoffset())->ResetFilter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoDigit*) G__getstructoffset())->PassFilter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRecoDigit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoDigit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRecoDigit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRecoDigit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRecoDigit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoDigit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoDigit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRecoDigit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_169_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRecoDigit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_169_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRecoDigit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRecoDigit(*(WCSimRecoDigit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRecoDigit G__TWCSimRecoDigit;
static int G__WCLRootDict_169_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRecoDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRecoDigit*) (soff+(sizeof(WCSimRecoDigit)*i)))->~G__TWCSimRecoDigit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRecoDigit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRecoDigit*) (soff))->~G__TWCSimRecoDigit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_169_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRecoDigit* dest = (WCSimRecoDigit*) G__getstructoffset();
   *dest = *(WCSimRecoDigit*) libp->para[0].ref;
   const WCSimRecoDigit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SandBoxPMTcoverage */
static int G__WCLRootDict_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SandBoxPMTcoverage* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SandBoxPMTcoverage[n];
     } else {
       p = new((void*) gvp) SandBoxPMTcoverage[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SandBoxPMTcoverage;
     } else {
       p = new((void*) gvp) SandBoxPMTcoverage;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SandBoxPMTcoverage*) G__getstructoffset())->SetWallConfiguration(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double*) G__int(libp->para[7])
, (double*) G__int(libp->para[8]), (int) G__int(libp->para[9])
, (double) G__double(libp->para[10]), (double) G__double(libp->para[11])
, (double) G__double(libp->para[12]), (double) G__double(libp->para[13]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SandBoxPMTcoverage*) G__getstructoffset())->SetBoxDimensions((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SandBoxPMTcoverage*) G__getstructoffset())->isActiveHit((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, *(int*) G__Intref(&libp->para[4]), (bool) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SandBoxPMTcoverage*) G__getstructoffset())->isActiveHitC((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, *(int*) G__Intref(&libp->para[4]), (bool) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SandBoxPMTcoverage*) G__getstructoffset())->isActiveHitOld((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), *(int*) G__Intref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SandBoxPMTcoverage::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SandBoxPMTcoverage::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SandBoxPMTcoverage::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SandBoxPMTcoverage::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SandBoxPMTcoverage*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SandBoxPMTcoverage::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SandBoxPMTcoverage::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SandBoxPMTcoverage::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_170_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SandBoxPMTcoverage::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_170_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SandBoxPMTcoverage* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SandBoxPMTcoverage(*(SandBoxPMTcoverage*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SandBoxPMTcoverage G__TSandBoxPMTcoverage;
static int G__WCLRootDict_170_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SandBoxPMTcoverage*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SandBoxPMTcoverage*) (soff+(sizeof(SandBoxPMTcoverage)*i)))->~G__TSandBoxPMTcoverage();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SandBoxPMTcoverage*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SandBoxPMTcoverage*) (soff))->~G__TSandBoxPMTcoverage();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_170_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SandBoxPMTcoverage* dest = (SandBoxPMTcoverage*) G__getstructoffset();
   *dest = *(SandBoxPMTcoverage*) libp->para[0].ref;
   const SandBoxPMTcoverage& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimTrueLight */
static int G__WCLRootDict_171_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTrueLight* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 16
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimTrueLight(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]), (Int_t) G__int(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Int_t) G__int(libp->para[15]));
   } else {
     p = new((void*) gvp) WCSimTrueLight(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Int_t) G__int(libp->para[12]), (Int_t) G__int(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Int_t) G__int(libp->para[15]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetXstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetYstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetZstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetTstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetXend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetYend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetZend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetTend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetWavelength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueLight*) G__getstructoffset())->GetIsScat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueLight*) G__getstructoffset())->GetIsHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueLight*) G__getstructoffset())->GetProcessStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueLight*) G__getstructoffset())->GetParentID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueLight*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueLight*) G__getstructoffset())->GetCaptureNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueLight*) G__getstructoffset())->GetPMTID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetPolarization1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueLight*) G__getstructoffset())->GetPolarization2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimTrueLight*) G__getstructoffset())->Convert2Reco());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimTrueLight::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueLight::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimTrueLight::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimTrueLight::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTrueLight*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueLight::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTrueLight::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueLight::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_171_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTrueLight::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_171_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimTrueLight* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimTrueLight(*(WCSimTrueLight*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimTrueLight G__TWCSimTrueLight;
static int G__WCLRootDict_171_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimTrueLight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimTrueLight*) (soff+(sizeof(WCSimTrueLight)*i)))->~G__TWCSimTrueLight();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimTrueLight*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimTrueLight*) (soff))->~G__TWCSimTrueLight();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_171_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTrueLight* dest = (WCSimTrueLight*) G__getstructoffset();
   *dest = *(WCSimTrueLight*) libp->para[0].ref;
   const WCSimTrueLight& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimTruePart */
static int G__WCLRootDict_172_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTruePart* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 21
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimTruePart(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Int_t) G__int(libp->para[16]), (Int_t) G__int(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Int_t) G__int(libp->para[19])
, (Int_t) G__int(libp->para[20]));
   } else {
     p = new((void*) gvp) WCSimTruePart(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Int_t) G__int(libp->para[16]), (Int_t) G__int(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Int_t) G__int(libp->para[19])
, (Int_t) G__int(libp->para[20]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetXstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetYstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetZstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetTstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetXend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetYend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetZend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetTend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetPXstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetPYstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetPZstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetPXend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetPYend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetPZend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetKEstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTruePart*) G__getstructoffset())->GetKEend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTruePart*) G__getstructoffset())->GetProcessStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTruePart*) G__getstructoffset())->GetProcessEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTruePart*) G__getstructoffset())->GetParentID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTruePart*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTruePart*) G__getstructoffset())->GetPID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimTruePart*) G__getstructoffset())->Convert2Reco());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimTruePart::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTruePart::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimTruePart::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimTruePart::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTruePart*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTruePart::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTruePart::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTruePart::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_172_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTruePart::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_172_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimTruePart* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimTruePart(*(WCSimTruePart*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimTruePart G__TWCSimTruePart;
static int G__WCLRootDict_172_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimTruePart*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimTruePart*) (soff+(sizeof(WCSimTruePart)*i)))->~G__TWCSimTruePart();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimTruePart*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimTruePart*) (soff))->~G__TWCSimTruePart();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_172_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTruePart* dest = (WCSimTruePart*) G__getstructoffset();
   *dest = *(WCSimTruePart*) libp->para[0].ref;
   const WCSimTruePart& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimTrueCapture */
static int G__WCLRootDict_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTrueCapture* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 10
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimTrueCapture(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
   } else {
     p = new((void*) gvp) WCSimTrueCapture(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueCapture*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueCapture*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueCapture*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueCapture*) G__getstructoffset())->GetT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimTrueCapture*) G__getstructoffset())->GetE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueCapture*) G__getstructoffset())->GetCaptNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueCapture*) G__getstructoffset())->GetCaptNucleus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueCapture*) G__getstructoffset())->GetNGamma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueCapture*) G__getstructoffset())->GetNPhot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimTrueCapture*) G__getstructoffset())->GetPID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimTrueCapture::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueCapture::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimTrueCapture::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimTrueCapture::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimTrueCapture*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueCapture::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTrueCapture::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimTrueCapture::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_173_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimTrueCapture::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_173_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimTrueCapture* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimTrueCapture(*(WCSimTrueCapture*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimTrueCapture G__TWCSimTrueCapture;
static int G__WCLRootDict_173_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimTrueCapture*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimTrueCapture*) (soff+(sizeof(WCSimTrueCapture)*i)))->~G__TWCSimTrueCapture();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimTrueCapture*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimTrueCapture*) (soff))->~G__TWCSimTrueCapture();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_173_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimTrueCapture* dest = (WCSimTrueCapture*) G__getstructoffset();
   *dest = *(WCSimTrueCapture*) libp->para[0].ref;
   const WCSimTrueCapture& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCLTreeReader */
static int G__WCLRootDict_505_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCLTreeReader*) G__getstructoffset())->TouchData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCLTreeReader*) G__getstructoffset())->TouchEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeReader*) G__getstructoffset())->LoadData((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeReader*) G__getstructoffset())->LoadData((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeReader*) G__getstructoffset())->LoadEvent((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeReader*) G__getstructoffset())->SetEventBranchAddys((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeReader*) G__getstructoffset())->SetGenBranchAddys();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeReader*) G__getstructoffset())->SetPMTBranchAddys();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeReader*) G__getstructoffset())->LoadPMT((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_nphot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_nhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_npart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_xStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_yStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_zStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_tStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_xEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_yEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_zEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_tEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_wavelength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_processStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_parentid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_trackid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_isScat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_hit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_capnum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_phot_PMTid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_xStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_yStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_zStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_tStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_xEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_yEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_zEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_tEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_pxStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_pyStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_pzStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_KEstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_pxEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_pyEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_pzEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_KEend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_processStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_processEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_parentid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_trackid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_part_pid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_neutroncount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_ncapturecount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_t0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_E());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_num());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_nucleus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_pid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_nphot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_capt_ngamma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_genntrks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_genmode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_genbeam_id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_gennneutrons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_genevt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_genvtxx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_genvtxy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_genvtxz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_genE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_genbeam_px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_genbeam_py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_genbeam_pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_genpid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_genpx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_genpy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_genpz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_genKE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_nMRDlayers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_MRDtotEdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_MRDtotEcgdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_MRDhitlayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_MRDhitorientation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_MRDhitEdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_MRDhitEchdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_MRDhitx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_MRDhity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_MRDhitz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_PMTid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_PMTx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_PMTy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_PMTz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_PMTsize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_PMTqe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCLTreeReader*) G__getstructoffset())->get_PMTtimeRes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->get_IsLAPPD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((WCLTreeReader*) G__getstructoffset())->get_hitPMTid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_hitTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_hitX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_hitY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((WCLTreeReader*) G__getstructoffset())->get_hitZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCLTreeReader*) G__getstructoffset())->getPhot((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCLTreeReader*) G__getstructoffset())->getPart((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCLTreeReader*) G__getstructoffset())->getCapt((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeReader*) G__getstructoffset())->GetNpmts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCLTreeReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCLTreeReader((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) WCLTreeReader((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCLTreeReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCLTreeReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCLTreeReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCLTreeReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCLTreeReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCLTreeReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCLTreeReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_505_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCLTreeReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_505_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCLTreeReader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCLTreeReader(*(WCLTreeReader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCLTreeReader G__TWCLTreeReader;
static int G__WCLRootDict_505_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCLTreeReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCLTreeReader*) (soff+(sizeof(WCLTreeReader)*i)))->~G__TWCLTreeReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCLTreeReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCLTreeReader*) (soff))->~G__TWCLTreeReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_505_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCLTreeReader* dest = (WCLTreeReader*) G__getstructoffset();
   *dest = *(WCLTreeReader*) libp->para[0].ref;
   const WCLTreeReader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCLTreeWriter */
static int G__WCLRootDict_541_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCLTreeWriter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCLTreeWriter(*((TString*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) WCLTreeWriter(*((TString*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->SetPMTBranchAddys();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->SetOutBranchAddys();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->SetFlatBranchAddys();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCLTreeWriter*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->InputEvent((WCLTreeReader*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->InitializeEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->AddWholeBranches((WCLTreeReader*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->AddPhoton((WCSimTrueLight*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->AddPMT(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (int) G__int(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->AddHit((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->FillEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->WriteTreeToFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCLTreeWriter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCLTreeWriter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCLTreeWriter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCLTreeWriter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCLTreeWriter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCLTreeWriter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCLTreeWriter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCLTreeWriter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_541_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCLTreeWriter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_541_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCLTreeWriter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCLTreeWriter(*(WCLTreeWriter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCLTreeWriter G__TWCLTreeWriter;
static int G__WCLRootDict_541_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCLTreeWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCLTreeWriter*) (soff+(sizeof(WCLTreeWriter)*i)))->~G__TWCLTreeWriter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCLTreeWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCLTreeWriter*) (soff))->~G__TWCLTreeWriter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_541_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCLTreeWriter* dest = (WCLTreeWriter*) G__getstructoffset();
   *dest = *(WCLTreeWriter*) libp->para[0].ref;
   const WCLTreeWriter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WChRecoLite */
static int G__WCLRootDict_624_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WChRecoLite::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WChRecoLite*) G__getstructoffset())->FindVertex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Double_t) G__double(libp->para[14]), (Double_t) G__double(libp->para[15])
, *(Double_t*) G__Doubleref(&libp->para[16]), *(Double_t*) G__Doubleref(&libp->para[17])
, *(Double_t*) G__Doubleref(&libp->para[18]), *(Double_t*) G__Doubleref(&libp->para[19])
, *(Double_t*) G__Doubleref(&libp->para[20]), *(Double_t*) G__Doubleref(&libp->para[21])
, *(Double_t*) G__Doubleref(&libp->para[22]), *(Double_t*) G__Doubleref(&libp->para[23])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WChRecoLite*) G__getstructoffset())->ChooseNextDigit(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WChRecoLite*) G__getstructoffset())->ChooseNextQuadruple(
*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6]), *(Double_t*) G__Doubleref(&libp->para[7])
, *(Double_t*) G__Doubleref(&libp->para[8]), *(Double_t*) G__Doubleref(&libp->para[9])
, *(Double_t*) G__Doubleref(&libp->para[10]), *(Double_t*) G__Doubleref(&libp->para[11])
, *(Double_t*) G__Doubleref(&libp->para[12]), *(Double_t*) G__Doubleref(&libp->para[13])
, *(Double_t*) G__Doubleref(&libp->para[14]), *(Double_t*) G__Doubleref(&libp->para[15])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WChRecoLite*) G__getstructoffset())->CalcVertexSeeds());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { double a[1][4]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
      G__letdouble(result7, 100, (double) ((WChRecoLite*) G__getstructoffset())->Amotry(G__Ap0->a, (double*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (const int) G__int(libp->para[4]), (const double) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { double a[1][4]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
      ((WChRecoLite*) G__getstructoffset())->Amoeba(G__Ap0->a, (double*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (const double) G__double(libp->para[3])
, *(int*) G__Intref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WChRecoLite*) G__getstructoffset())->MeanVertexSeed((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WChRecoLite*) G__getstructoffset())->TimePropertiesLnL(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WChRecoLite*) G__getstructoffset())->FitPointTimePropertiesLnL(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WChRecoLite*) G__getstructoffset())->SelectBestSeed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WChRecoLite*) G__getstructoffset())->WeightedSumSeed((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { double a[1][4]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
      ((WChRecoLite*) G__getstructoffset())->GetP(G__Ap0->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WChRecoLite*) G__getstructoffset())->GetSumVtx((double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((WChRecoLite*) G__getstructoffset())->GetSeedVtx((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WChRecoLite*) G__getstructoffset())->SetDigits(
*((vector<double>*) G__int(libp->para[0])), *((vector<double>*) G__int(libp->para[1]))
, *((vector<double>*) G__int(libp->para[2])), *((vector<double>*) G__int(libp->para[3]))
, *((vector<double>*) G__int(libp->para[4])), *((vector<double>*) G__int(libp->para[5]))
, *((vector<double>*) G__int(libp->para[6])), *((vector<double>*) G__int(libp->para[7]))
, *((vector<double>*) G__int(libp->para[8])), *((vector<int>*) G__int(libp->para[9])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WChRecoLite::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WChRecoLite::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WChRecoLite::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WChRecoLite::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WChRecoLite*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WChRecoLite::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WChRecoLite::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WChRecoLite::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_624_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WChRecoLite::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_624_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WChRecoLite* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WChRecoLite(*(WChRecoLite*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_WChRecoLite));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_624_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WChRecoLite* dest = (WChRecoLite*) G__getstructoffset();
   *dest = *(WChRecoLite*) libp->para[0].ref;
   const WChRecoLite& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HighEReco */
static int G__WCLRootDict_645_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HighEReco* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HighEReco[n];
     } else {
       p = new((void*) gvp) HighEReco[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HighEReco;
     } else {
       p = new((void*) gvp) HighEReco;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_HighEReco));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 10:
      G__letint(result7, 105, (long) ((HighEReco*) G__getstructoffset())->FindRings(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double*) G__int(libp->para[4]), (double*) G__int(libp->para[5])
, (int*) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (bool) G__int(libp->para[8]), (double*) G__int(libp->para[9])));
      break;
   case 9:
      G__letint(result7, 105, (long) ((HighEReco*) G__getstructoffset())->FindRings(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double*) G__int(libp->para[4]), (double*) G__int(libp->para[5])
, (int*) G__int(libp->para[6]), (int) G__int(libp->para[7])
, (bool) G__int(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 105, (long) ((HighEReco*) G__getstructoffset())->FindRings(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double*) G__int(libp->para[4]), (double*) G__int(libp->para[5])
, (int*) G__int(libp->para[6]), (int) G__int(libp->para[7])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HighEReco*) G__getstructoffset())->FindTracks((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HighEReco*) G__getstructoffset())->PointFit(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HighEReco*) G__getstructoffset())->TrackFit(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HighEReco*) G__getstructoffset())->LikelihoodFit(
*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]), (int) G__int(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HighEReco*) G__getstructoffset())->PointBadness((double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HighEReco*) G__getstructoffset())->TrackBadness((double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((HighEReco*) G__getstructoffset())->TrackGoodness((double*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((HighEReco*) G__getstructoffset())->TrackGoodness((double*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((HighEReco*) G__getstructoffset())->TrackGoodness((double*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HighEReco*) G__getstructoffset())->ElectronLnLikelihood((double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HighEReco*) G__getstructoffset())->MuonLnLikelihood((double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HighEReco*) G__getstructoffset())->FullTimeOfFlight(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (int) G__int(libp->para[6]), (double) G__double(libp->para[7])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      G__letdouble(result7, 100, (double) ((HighEReco*) G__getstructoffset())->ExpectedPMTPhotoelectrons(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (int) G__int(libp->para[6]), (bool) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (int) G__int(libp->para[9])
, (double*) G__int(libp->para[10])));
      break;
   case 10:
      G__letdouble(result7, 100, (double) ((HighEReco*) G__getstructoffset())->ExpectedPMTPhotoelectrons(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (int) G__int(libp->para[6]), (bool) G__int(libp->para[7])
, (double) G__double(libp->para[8]), (int) G__int(libp->para[9])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HighEReco::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HighEReco::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HighEReco::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HighEReco::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HighEReco*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HighEReco::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HighEReco::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HighEReco::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_645_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HighEReco::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_645_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HighEReco* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HighEReco(*(HighEReco*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_HighEReco));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HighEReco G__THighEReco;
static int G__WCLRootDict_645_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HighEReco*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HighEReco*) (soff+(sizeof(HighEReco)*i)))->~G__THighEReco();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HighEReco*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HighEReco*) (soff))->~G__THighEReco();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_645_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HighEReco* dest = (HighEReco*) G__getstructoffset();
   *dest = *(HighEReco*) libp->para[0].ref;
   const HighEReco& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LowEReco */
static int G__WCLRootDict_646_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LowEReco* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LowEReco[n];
     } else {
       p = new((void*) gvp) LowEReco[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LowEReco;
     } else {
       p = new((void*) gvp) LowEReco;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_LowEReco));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_646_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((LowEReco*) G__getstructoffset())->ReconstructEnergy((int) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_646_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LowEReco*) G__getstructoffset())->DoLowEReco(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double*) G__int(libp->para[5])
, (double) G__double(libp->para[6]), *(double*) G__Doubleref(&libp->para[7])
, *(double*) G__Doubleref(&libp->para[8]), *(double*) G__Doubleref(&libp->para[9])
, *(double*) G__Doubleref(&libp->para[10]), *(double*) G__Doubleref(&libp->para[11])
, *(double*) G__Doubleref(&libp->para[12]), *(double*) G__Doubleref(&libp->para[13]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_646_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LowEReco::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_646_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LowEReco::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_646_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LowEReco::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_646_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LowEReco::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_646_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LowEReco*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_646_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LowEReco::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_646_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LowEReco::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_646_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LowEReco::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_646_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LowEReco::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_646_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LowEReco* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LowEReco(*(LowEReco*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_LowEReco));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LowEReco G__TLowEReco;
static int G__WCLRootDict_646_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LowEReco*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LowEReco*) (soff+(sizeof(LowEReco)*i)))->~G__TLowEReco();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LowEReco*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LowEReco*) (soff))->~G__TLowEReco();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_646_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LowEReco* dest = (LowEReco*) G__getstructoffset();
   *dest = *(LowEReco*) libp->para[0].ref;
   const LowEReco& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LikelihoodGenerator */
static int G__WCLRootDict_659_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LikelihoodGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LikelihoodGenerator((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) LikelihoodGenerator((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new LikelihoodGenerator[n];
       } else {
         p = new((void*) gvp) LikelihoodGenerator[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new LikelihoodGenerator;
       } else {
         p = new((void*) gvp) LikelihoodGenerator;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_LikelihoodGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LikelihoodGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LikelihoodGenerator(*((TString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) LikelihoodGenerator(*((TString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_LikelihoodGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LikelihoodGenerator*) G__getstructoffset())->Cut((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LikelihoodGenerator*) G__getstructoffset())->GetEntry((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((LikelihoodGenerator*) G__getstructoffset())->LoadTree((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LikelihoodGenerator*) G__getstructoffset())->Init((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((LikelihoodGenerator*) G__getstructoffset())->Loop((bool) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((LikelihoodGenerator*) G__getstructoffset())->Loop((bool) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((LikelihoodGenerator*) G__getstructoffset())->Loop((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((LikelihoodGenerator*) G__getstructoffset())->Loop();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((LikelihoodGenerator*) G__getstructoffset())->Loop2((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((LikelihoodGenerator*) G__getstructoffset())->Loop2((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((LikelihoodGenerator*) G__getstructoffset())->Loop2();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((LikelihoodGenerator*) G__getstructoffset())->Loop3((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((LikelihoodGenerator*) G__getstructoffset())->Loop3((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((LikelihoodGenerator*) G__getstructoffset())->Loop3();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((LikelihoodGenerator*) G__getstructoffset())->Show((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((LikelihoodGenerator*) G__getstructoffset())->Show();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LikelihoodGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LikelihoodGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LikelihoodGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LikelihoodGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LikelihoodGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LikelihoodGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LikelihoodGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LikelihoodGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCLRootDict_659_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LikelihoodGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCLRootDict_659_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LikelihoodGenerator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LikelihoodGenerator(*(LikelihoodGenerator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCLRootDictLN_LikelihoodGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LikelihoodGenerator G__TLikelihoodGenerator;
static int G__WCLRootDict_659_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LikelihoodGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LikelihoodGenerator*) (soff+(sizeof(LikelihoodGenerator)*i)))->~G__TLikelihoodGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LikelihoodGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LikelihoodGenerator*) (soff))->~G__TLikelihoodGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCLRootDict_659_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LikelihoodGenerator* dest = (LikelihoodGenerator*) G__getstructoffset();
   *dest = *(LikelihoodGenerator*) libp->para[0].ref;
   const LikelihoodGenerator& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* WCSimRecoObjectTable */

/* WCSimRecoDigit */

/* SandBoxPMTcoverage */

/* WCSimTrueLight */

/* WCSimTruePart */

/* WCSimTrueCapture */

/* WCLTreeReader */

/* WCLTreeWriter */

/* WChRecoLite */

/* HighEReco */

/* LowEReco */

/* LikelihoodGenerator */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncWCLRootDict {
 public:
  G__Sizep2memfuncWCLRootDict(): p(&G__Sizep2memfuncWCLRootDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncWCLRootDict::*p)();
};

size_t G__get_sizep2memfuncWCLRootDict()
{
  G__Sizep2memfuncWCLRootDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceWCLRootDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable))) {
     WCSimRecoObjectTable *G__Lderived;
     G__Lderived=(WCSimRecoObjectTable*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit))) {
     WCSimRecoDigit *G__Lderived;
     G__Lderived=(WCSimRecoDigit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage))) {
     SandBoxPMTcoverage *G__Lderived;
     G__Lderived=(SandBoxPMTcoverage*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight))) {
     WCSimTrueLight *G__Lderived;
     G__Lderived=(WCSimTrueLight*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart))) {
     WCSimTruePart *G__Lderived;
     G__Lderived=(WCSimTruePart*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture))) {
     WCSimTrueCapture *G__Lderived;
     G__Lderived=(WCSimTrueCapture*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader))) {
     WCLTreeReader *G__Lderived;
     G__Lderived=(WCLTreeReader*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter))) {
     WCLTreeWriter *G__Lderived;
     G__Lderived=(WCLTreeWriter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_WChRecoLite))) {
     WChRecoLite *G__Lderived;
     G__Lderived=(WChRecoLite*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WChRecoLite),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_HighEReco))) {
     HighEReco *G__Lderived;
     G__Lderived=(HighEReco*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_HighEReco),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_LowEReco))) {
     LowEReco *G__Lderived;
     G__Lderived=(LowEReco*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_LowEReco),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCLRootDictLN_LikelihoodGenerator))) {
     LikelihoodGenerator *G__Lderived;
     G__Lderived=(LikelihoodGenerator*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCLRootDictLN_LikelihoodGenerator),G__get_linked_tagnum(&G__WCLRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableWCLRootDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCLRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCLRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCLRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCLRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__WCLRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__WCLRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__WCLRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__WCLRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__WCLRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__WCLRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__WCLRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__WCLRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__WCLRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__WCLRootDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCLRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCLRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double>",117,G__get_linked_tagnum(&G__WCLRootDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double,less<int> >",117,G__get_linked_tagnum(&G__WCLRootDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* WCSimRecoObjectTable */
static void G__setup_memvarWCSimRecoObjectTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable));
   { WCSimRecoObjectTable *p; p=(WCSimRecoObjectTable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numClusters=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numClusterDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numVertices=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numRings=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRecoDigit */
static void G__setup_memvarWCSimRecoDigit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit));
   { WCSimRecoDigit *p; p=(WCSimRecoDigit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRegion=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRawTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRawQPEs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCalQPEs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRawPEtube=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsFiltered=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SandBoxPMTcoverage */
static void G__setup_memvarSandBoxPMTcoverage(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage));
   { SandBoxPMTcoverage *p; p=(SandBoxPMTcoverage*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"NLAPPDs_per_rowcolumn=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_mmode[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_PMTs_per_row[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_PMTs_per_column[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_QE_PMT[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_QE_WAVELENGTHS_PMT[7][20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_QE_FACTOR_PMT[7][20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_PMTs_mshape[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_PMTs_msize[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_LAPPDs_per_row[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_LAPPDs_per_column[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_QE_LAPPD[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_LAPPDs_mshape[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_LAPPDs_msize[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_xl=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_yl=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_zl=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_xh=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_yh=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_zh=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_opt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"_Rh=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimTrueLight */
static void G__setup_memvarWCSimTrueLight(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight));
   { WCSimTrueLight *p; p=(WCSimTrueLight*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fWavelength=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fisScattered=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fisHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fprocessStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fparentID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ftrackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPMTID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fcaptNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fThet=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fP1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fP2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimTruePart */
static void G__setup_memvarWCSimTruePart(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart));
   { WCSimTruePart *p; p=(WCSimTruePart*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fYe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPXs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPYs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPZs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPXe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPYe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPZe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fKEs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fKEe=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fprocessStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fprocessEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fparentID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ftrackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimTrueCapture */
static void G__setup_memvarWCSimTrueCapture(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture));
   { WCSimTrueCapture *p; p=(WCSimTrueCapture*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fE=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCnum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCnucl=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNgamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNphot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCLTreeReader */
static void G__setup_memvarWCLTreeReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader));
   { WCLTreeReader *p; p=(WCLTreeReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TChain),-1,-1,4,"fChain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TChain),-1,-1,4,"fChainT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TChain),-1,-1,4,"pmtChain=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fincgen=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fPMTs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TFile),-1,-1,4,"tf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"evttree=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_xStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_yStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_zStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_tStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_xEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_yEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_zEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_tEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"phot_wavelength=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"phot_processStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"phot_isScat=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"phot_parentid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"phot_trackid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"phot_hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"phot_capnum=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_xStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_yStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_zStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_tStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_xEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_yEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_zEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_tEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_KEstart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_KEend=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_pxStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_pyStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_pzStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_pxEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_pyEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"part_pzEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_processStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_processEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_parentid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_trackid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_pid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"capt_num=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"capt_nucleus=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"capt_pid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"capt_nphot=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"capt_ngamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"capt_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"capt_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"capt_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"capt_t0=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"capt_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"eventcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nphot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"npart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ncapturecount=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"neutroncount=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"pmt_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"is_lappd=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pmt_pos_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pmt_pos_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pmt_pos_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pmt_size=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pmt_qe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pmt_time_res=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"hit_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"hit_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"hit_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"hit_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"hit_PMTid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TFile),-1,-1,4,"tcf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"tcardtree=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mevt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ntrks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nneutrons=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mmode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mbeam_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nMRDlayers=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mvtxx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mvtxy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mvtxz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mbeam_px=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mbeam_py=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mbeam_pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mMRDtotEdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mMRDtotEchdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"mpid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"mMRDhitlayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"mMRDhitorientation=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mpx=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mpy=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mpz=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mKE=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhitEdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhitEchdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhitx=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhity=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhitz=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nhits=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"phot_PMTid=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"x_hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"y_hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"z_hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"true_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"true_time_corrected=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"photon_wavelength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"process=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"evtID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"pidd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mprocessStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mtrackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mparentID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mprocessStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pos_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pos_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pos_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dir_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dir_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dir_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Et=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Ekin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TFile),-1,-1,4,"outfile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"outtree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"truetree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("fstream"),-1,4,"textout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCLTreeWriter */
static void G__setup_memvarWCLTreeWriter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter));
   { WCLTreeWriter *p; p=(WCLTreeWriter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"fChain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight),-1,-1,4,"thisphot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fmode=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fNewEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TFile),-1,-1,4,"tf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"evttree=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_xStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_yStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_zStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_tStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_xEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_yEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_zEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_tEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"phot_wavelength=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"phot_processStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"phot_isScat=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"phot_parentid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"phot_trackid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"phot_hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"phot_capnum=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_xStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_yStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_zStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_tStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_xEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_yEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_zEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_tEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_KEstart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_KEend=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_pxStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_pyStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_pzStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_pxEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_pyEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"part_pzEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_processStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_processEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_parentid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_trackid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"part_pid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"capt_num=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"capt_nucleus=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"capt_pid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"capt_nphot=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"capt_ngamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"capt_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"capt_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"capt_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"capt_t0=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"capt_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eventcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nphot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"npart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ncapturecount=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"neutroncount=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TFile),-1,-1,4,"tcf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"tcardtree=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mevt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ntrks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nneutrons=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mmode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mbeam_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nMRDlayers=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mvtxx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mvtxy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mvtxz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mbeam_px=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mbeam_py=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mbeam_pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mMRDtotEdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mMRDtotEchdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"mpid=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"mMRDhitlayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"mMRDhitorientation=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mpx=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mpy=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mpz=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mKE=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhitEdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhitEchdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhitx=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhity=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"mMRDhitz=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nhits=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"phot_PMTid=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"x_hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"y_hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"z_hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"true_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"true_time_corrected=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"photon_wavelength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"process=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"evtID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"pidd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mprocessStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mtrackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mparentID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mprocessStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pos_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pos_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pos_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dir_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dir_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dir_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Et=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Ekin=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"hit_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"hit_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"hit_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"hit_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"hit_PMTid=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"pmt_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"is_lappd=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pmt_pos_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pmt_pos_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pmt_pos_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pmt_size=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pmt_qe=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pmt_time_res=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TFile),-1,-1,4,"outfile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"outtree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"truetree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,4,"pmtTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("fstream"),-1,4,"textout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WChRecoLite */
static void G__setup_memvarWChRecoLite(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WChRecoLite));
   { WChRecoLite *p; p=(WChRecoLite*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"R_SPHERE=",0,"sphere diameter [cm]");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"R_LENGTH=",0,"length [cm]");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"N_REF=",0,"average index of refraction");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"C_VAC=",0,"speed of light in vacuum [cm/ns]");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"NSeedsTarget=",0,"number of quadruplets");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TSIGMA=",0,"total time spread (including detector TTS chromatic dispersions)");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBaseFOM=",0,"Figure of merit. Borrowed from WCSim: ");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"meanTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"seedTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNDigits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fThisDigit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fLastEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fCounter=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fMinTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fDigitX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fDigitY=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fDigitZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fDigitT=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fDigitQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fDigitPE=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fDigitW=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fDigitV=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fDelta=",0,"time residual");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<int,double>"),-1,4,"INDEX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TRandom),-1,-1,4,"RND=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"vSeedVtxX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"vSeedVtxY=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"vSeedVtxZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"vSeedVtxTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"vSeedDigitList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HighEReco */
static void G__setup_memvarHighEReco(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_HighEReco));
   { HighEReco *p; p=(HighEReco*)0x1000; if (p) { }
   G__memvar_setup((void*)(&HighEReco::C_VAC),100,0,1,-1,-1,-2,1,"C_VAC=",0,(char*)NULL);
   G__memvar_setup((void*)(&HighEReco::N_REF),100,0,1,-1,-1,-2,1,"N_REF=",0,(char*)NULL);
   G__memvar_setup((void*)(&HighEReco::C_WAT),100,0,1,-1,-1,-2,1,"C_WAT=",0,(char*)NULL);
   G__memvar_setup((void*)(&HighEReco::multiRingFactor),100,0,1,-1,-1,-2,1,"multiRingFactor=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitPMTx)-(long)(p)),68,0,0,-1,-1,-1,1,"hitPMTx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitPMTy)-(long)(p)),68,0,0,-1,-1,-1,1,"hitPMTy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitPMTz)-(long)(p)),68,0,0,-1,-1,-1,1,"hitPMTz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitPMTDirX)-(long)(p)),68,0,0,-1,-1,-1,1,"hitPMTDirX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitPMTDirY)-(long)(p)),68,0,0,-1,-1,-1,1,"hitPMTDirY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitPMTDirZ)-(long)(p)),68,0,0,-1,-1,-1,1,"hitPMTDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitPMTTimeRes)-(long)(p)),68,0,0,-1,-1,-1,1,"hitPMTTimeRes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitPMTPEs)-(long)(p)),73,0,0,-1,-1,-1,1,"hitPMTPEs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nHitPMT)-(long)(p)),105,0,0,-1,-1,-1,1,"nHitPMT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->unhitPMTx)-(long)(p)),68,0,0,-1,-1,-1,1,"unhitPMTx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->unhitPMTy)-(long)(p)),68,0,0,-1,-1,-1,1,"unhitPMTy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->unhitPMTz)-(long)(p)),68,0,0,-1,-1,-1,1,"unhitPMTz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->unhitPMTDirX)-(long)(p)),68,0,0,-1,-1,-1,1,"unhitPMTDirX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->unhitPMTDirY)-(long)(p)),68,0,0,-1,-1,-1,1,"unhitPMTDirY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->unhitPMTDirZ)-(long)(p)),68,0,0,-1,-1,-1,1,"unhitPMTDirZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->unhitPMTTimeRes)-(long)(p)),68,0,0,-1,-1,-1,1,"unhitPMTTimeRes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nUnhitPMT)-(long)(p)),105,0,0,-1,-1,-1,1,"nUnhitPMT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitT)-(long)(p)),68,0,0,-1,-1,-1,1,"hitT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitRing)-(long)(p)),73,0,0,-1,-1,-1,1,"hitRing=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hitPMT)-(long)(p)),73,0,0,-1,-1,-1,1,"hitPMT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nPEs)-(long)(p)),105,0,0,-1,-1,-1,1,"nPEs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->electronPhotons)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TH3D),-1,-1,1,"electronPhotons=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muonPhotons)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TH3D),-1,-1,1,"muonPhotons=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->electronTimes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TH3D),-1,-1,1,"electronTimes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muonTimes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TH3D),-1,-1,1,"muonTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LowEReco */
static void G__setup_memvarLowEReco(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_LowEReco));
   { LowEReco *p; p=(LowEReco*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LikelihoodGenerator */
static void G__setup_memvarLikelihoodGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCLRootDictLN_LikelihoodGenerator));
   { LikelihoodGenerator *p; p=(LikelihoodGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hPDF)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TH2D),-1,-1,1,"hPDF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hPhotonCount)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TH2D),-1,-1,1,"hPhotonCount=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TH2D),-1,-1,1,"hTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fChain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TTree),-1,-1,1,"fChain=",0,"!pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)((long)(&p->fCurrent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fCurrent=",0,"!current Tree number in a TChain");
   G__memvar_setup((void*)((long)(&p->evt)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"evt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nphot)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nphot=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->npart)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"npart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ncapturecount)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ncapturecount=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neutroncount)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"neutroncount=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phot_xStart)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phot_xStart[10000000]=",0,"[nphot]");
   G__memvar_setup((void*)((long)(&p->phot_yStart)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phot_yStart[10000000]=",0,"[nphot]");
   G__memvar_setup((void*)((long)(&p->phot_zStart)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phot_zStart[10000000]=",0,"[nphot]");
   G__memvar_setup((void*)((long)(&p->phot_tStart)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phot_tStart[10000000]=",0,"[nphot]");
   G__memvar_setup((void*)((long)(&p->phot_xEnd)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phot_xEnd[10000000]=",0,"[nphot]");
   G__memvar_setup((void*)((long)(&p->phot_yEnd)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phot_yEnd[10000000]=",0,"[nphot]");
   G__memvar_setup((void*)((long)(&p->phot_zEnd)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phot_zEnd[10000000]=",0,"[nphot]");
   G__memvar_setup((void*)((long)(&p->phot_tEnd)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phot_tEnd[10000000]=",0,"[nphot]");
   G__memvar_setup((void*)((long)(&p->phot_wavelength)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"phot_wavelength[10000000]=",0,"[nphot]");
   G__memvar_setup((void*)((long)(&p->phot_processStart)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"phot_processStart[10000000]=",0,"[nphot]");
   G__memvar_setup((void*)((long)(&p->phot_isScat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"phot_isScat[10000000]=",0,"[nphot]");
   G__memvar_setup((void*)((long)(&p->phot_parentid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"phot_parentid[10000000]=",0,"[nphot]");
   G__memvar_setup((void*)((long)(&p->phot_trackid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"phot_trackid[10000000]=",0,"[nphot]");
   G__memvar_setup((void*)((long)(&p->phot_hit)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"phot_hit[10000000]=",0,"[nphot]");
   G__memvar_setup((void*)((long)(&p->phot_capnum)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"phot_capnum[10000000]=",0,"[nphot]");
   G__memvar_setup((void*)((long)(&p->part_xStart)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"part_xStart[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_yStart)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"part_yStart[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_zStart)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"part_zStart[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_tStart)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"part_tStart[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_xEnd)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"part_xEnd[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_yEnd)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"part_yEnd[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_zEnd)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"part_zEnd[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_tEnd)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"part_tEnd[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_pxStart)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"part_pxStart[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_pyStart)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"part_pyStart[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_pzStart)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"part_pzStart[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_pxEnd)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"part_pxEnd[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_pyEnd)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"part_pyEnd[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_pzEnd)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"part_pzEnd[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_KEstart)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"part_KEstart[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_KEend)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"part_KEend[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_processStart)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"part_processStart[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_processEnd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"part_processEnd[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_parentid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"part_parentid[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_trackid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"part_trackid[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->part_pid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"part_pid[10000]=",0,"[npart]");
   G__memvar_setup((void*)((long)(&p->capt_x)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"capt_x[2]=",0,"[ncapturecount]");
   G__memvar_setup((void*)((long)(&p->capt_y)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"capt_y[2]=",0,"[ncapturecount]");
   G__memvar_setup((void*)((long)(&p->capt_z)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"capt_z[2]=",0,"[ncapturecount]");
   G__memvar_setup((void*)((long)(&p->capt_t0)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"capt_t0[2]=",0,"[ncapturecount]");
   G__memvar_setup((void*)((long)(&p->capt_E)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"capt_E[2]=",0,"[ncapturecount]");
   G__memvar_setup((void*)((long)(&p->capt_num)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"capt_num[2]=",0,"[ncapturecount]");
   G__memvar_setup((void*)((long)(&p->capt_pid)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"capt_pid[2]=",0,"[ncapturecount]");
   G__memvar_setup((void*)((long)(&p->capt_nucleus)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"capt_nucleus[2]=",0,"[ncapturecount]");
   G__memvar_setup((void*)((long)(&p->capt_nphot)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"capt_nphot[2]=",0,"[ncapturecount]");
   G__memvar_setup((void*)((long)(&p->capt_ngamma)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"capt_ngamma[2]=",0,"[ncapturecount]");
   G__memvar_setup((void*)((long)(&p->b_evt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_evt=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_nphot)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_nphot=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_npart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_npart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_ncapturecount)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_ncapturecount=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_neutroncount)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_neutroncount=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phot_xStart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_phot_xStart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phot_yStart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_phot_yStart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phot_zStart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_phot_zStart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phot_tStart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_phot_tStart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phot_xEnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_phot_xEnd=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phot_yEnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_phot_yEnd=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phot_zEnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_phot_zEnd=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phot_tEnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_phot_tEnd=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phot_wavelength)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_phot_wavelength=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phot_processStart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_phot_processStart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phot_isScat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_phot_isScat=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phot_parentid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_phot_parentid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phot_trackid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_phot_trackid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phot_hit)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_phot_hit=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_phot_capnum)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_phot_capnum=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_xStart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_xStart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_yStart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_yStart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_zStart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_zStart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_tStart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_tStart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_xEnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_xEnd=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_yEnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_yEnd=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_zEnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_zEnd=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_tEnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_tEnd=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_pxStart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_pxStart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_pyStart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_pyStart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_pzStart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_pzStart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_pxEnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_pxEnd=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_pyEnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_pyEnd=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_pzEnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_pzEnd=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_KEstart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_KEstart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_KEend)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_KEend=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_processStart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_processStart=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_processEnd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_processEnd=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_parentid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_parentid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_trackid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_trackid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_part_pid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_part_pid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_capt_x)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_capt_x=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_capt_y)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_capt_y=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_capt_z)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_capt_z=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_capt_t0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_capt_t0=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_capt_E)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_capt_E=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_capt_num)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_capt_num=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_capt_pid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_capt_pid=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_capt_nucleus)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_capt_nucleus=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_capt_nphot)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_capt_nphot=",0,"!");
   G__memvar_setup((void*)((long)(&p->b_capt_ngamma)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TBranch),-1,-1,1,"b_capt_ngamma=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCLRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarWCLRootDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncWCSimRecoObjectTable(void) {
   /* WCSimRecoObjectTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable));
   G__memfunc_setup("Instance",821,G__WCLRootDict_168_0_1, 85, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WCSimRecoObjectTable* (*)())(&WCSimRecoObjectTable::Instance) ), 0);
   G__memfunc_setup("NewDigit",795,G__WCLRootDict_168_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteDigit",1092,G__WCLRootDict_168_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfDigits",1410,G__WCLRootDict_168_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewCluster",1036,G__WCLRootDict_168_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteCluster",1333,G__WCLRootDict_168_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfClusters",1651,G__WCLRootDict_168_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewClusterDigit",1533,G__WCLRootDict_168_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteClusterDigit",1830,G__WCLRootDict_168_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfClusterDigits",2148,G__WCLRootDict_168_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewVertex",936,G__WCLRootDict_168_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteVertex",1233,G__WCLRootDict_168_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfVertices",1635,G__WCLRootDict_168_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewRing",698,G__WCLRootDict_168_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteRing",995,G__WCLRootDict_168_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfRings",1313,G__WCLRootDict_168_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewEvent",812,G__WCLRootDict_168_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteEvent",1109,G__WCLRootDict_168_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NumberOfEvents",1427,G__WCLRootDict_168_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__WCLRootDict_168_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__WCLRootDict_168_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimRecoObjectTable",1931,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_168_0_23, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRecoObjectTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_168_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoObjectTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_168_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRecoObjectTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_168_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRecoObjectTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_168_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_168_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoObjectTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_168_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoObjectTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_168_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoObjectTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_168_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoObjectTable::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRecoObjectTable", 1931, G__WCLRootDict_168_0_35, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable), -1, 0, 1, 1, 1, 0, "u 'WCSimRecoObjectTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_168_0_36, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoObjectTable), -1, 1, 1, 1, 1, 0, "u 'WCSimRecoObjectTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRecoDigit(void) {
   /* WCSimRecoDigit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit));
   G__memfunc_setup("WCSimRecoDigit",1341,G__WCLRootDict_169_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit), -1, 0, 9, 1, 1, 0, 
"i - 'Int_t' 0 - region d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y d - 'Double_t' 0 - z "
"d - 'Double_t' 0 - rawT d - 'Double_t' 0 - rawQ "
"i - 'Int_t' 0 - rawPEtube d - 'Double_t' 0 - calT "
"d - 'Double_t' 0 - calQ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRegion",900,G__WCLRootDict_169_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__WCLRootDict_169_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__WCLRootDict_169_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__WCLRootDict_169_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawTime",985,G__WCLRootDict_169_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawQPEs",931,G__WCLRootDict_169_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__WCLRootDict_169_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQPEs",633,G__WCLRootDict_169_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawPEtube",1167,G__WCLRootDict_169_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFiltered",1003,G__WCLRootDict_169_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilter",914,G__WCLRootDict_169_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' pass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetFilter",1129,G__WCLRootDict_169_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PassFilter",1021,G__WCLRootDict_169_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_169_0_15, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRecoDigit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_169_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoDigit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_169_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRecoDigit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_169_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRecoDigit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_169_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_169_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoDigit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_169_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoDigit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_169_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRecoDigit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_169_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRecoDigit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRecoDigit", 1341, G__WCLRootDict_169_0_27, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit), -1, 0, 1, 1, 1, 0, "u 'WCSimRecoDigit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRecoDigit", 1467, G__WCLRootDict_169_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_169_0_29, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit), -1, 1, 1, 1, 1, 0, "u 'WCSimRecoDigit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSandBoxPMTcoverage(void) {
   /* SandBoxPMTcoverage */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage));
   G__memfunc_setup("SandBoxPMTcoverage",1772,G__WCLRootDict_170_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWallConfiguration",2068,G__WCLRootDict_170_0_2, 121, -1, -1, 0, 14, 1, 1, 0, 
"i - - 0 - mcase i - - 0 - mmode "
"i - - 0 - mshapePMT d - - 0 - msizePMT "
"d - - 0 - NrowPMT d - - 0 - NcolPMT "
"d - - 0 - QE_PMT D - - 0 - QE_WAVELENGTHS_PMT "
"D - - 0 - QE_FACTOR_PMT i - - 0 - mshapeLAPPD "
"d - - 0 - msizeLAPPD d - - 0 - NrowLAPPD "
"d - - 0 - NcolLAPPD d - - 0 - QE_LAPPD", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBoxDimensions",1646,G__WCLRootDict_170_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - opt d - - 0 - dim1 "
"d - - 0 - dim2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isActiveHit",1117,G__WCLRootDict_170_0_4, 105, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - mx d - - 0 - my "
"d - - 0 - mz d - - 0 - wavelength "
"i - - 1 - whichPhotoSensor g - - 0 - LAPPDs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isActiveHitC",1184,G__WCLRootDict_170_0_5, 105, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 - mcase d - - 0 - xx1 "
"d - - 0 - xx2 d - - 0 - wavelength "
"i - - 1 - whichPhotoSensor g - - 0 - LAPPDs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isActiveHitOld",1404,G__WCLRootDict_170_0_6, 103, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - mx d - - 0 - my "
"d - - 0 - mz i - - 1 - whichPhotoSensor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isActiveHitLAPPD_C",1648,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 6, 1, 4, 0, 
"i - - 0 - mcase d - - 0 - xx1 "
"d - - 0 - xx2 i - - 1 - whichPhotoSensor "
"d - - 1 - cxx1 d - - 1 - cxx2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isActiveHitPMT_C",1520,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 6, 1, 4, 0, 
"i - - 0 - mcase d - - 0 - xx1 "
"d - - 0 - xx2 i - - 1 - whichPhotoSensor "
"d - - 1 - cxx1 d - - 1 - cxx2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_170_0_9, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SandBoxPMTcoverage::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_170_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SandBoxPMTcoverage::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_170_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SandBoxPMTcoverage::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_170_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SandBoxPMTcoverage::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_170_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_170_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SandBoxPMTcoverage::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_170_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SandBoxPMTcoverage::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_170_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SandBoxPMTcoverage::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_170_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SandBoxPMTcoverage::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SandBoxPMTcoverage", 1772, G__WCLRootDict_170_0_21, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage), -1, 0, 1, 1, 1, 0, "u 'SandBoxPMTcoverage' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SandBoxPMTcoverage", 1898, G__WCLRootDict_170_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_170_0_23, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_SandBoxPMTcoverage), -1, 1, 1, 1, 1, 0, "u 'SandBoxPMTcoverage' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimTrueLight(void) {
   /* WCSimTrueLight */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight));
   G__memfunc_setup("WCSimTrueLight",1371,G__WCLRootDict_171_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight), -1, 0, 16, 1, 1, 0, 
"d - 'Double_t' 0 - xs d - 'Double_t' 0 - ys "
"d - 'Double_t' 0 - zs d - 'Double_t' 0 - ts "
"d - 'Double_t' 0 - xe d - 'Double_t' 0 - ye "
"d - 'Double_t' 0 - ze d - 'Double_t' 0 - te "
"d - 'Double_t' 0 - wavelength i - 'Int_t' 0 - processs "
"i - 'Int_t' 0 - isScat i - 'Int_t' 0 - parentID "
"i - 'Int_t' 0 - trackID i - 'Int_t' 0 - ishit "
"i - 'Int_t' 0 - capnum i - 'Int_t' 0 - PMTid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXstart",934,G__WCLRootDict_171_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYstart",935,G__WCLRootDict_171_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZstart",936,G__WCLRootDict_171_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTstart",930,G__WCLRootDict_171_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXend",687,G__WCLRootDict_171_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYend",688,G__WCLRootDict_171_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZend",689,G__WCLRootDict_171_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTend",683,G__WCLRootDict_171_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWavelength",1333,G__WCLRootDict_171_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIsScat",871,G__WCLRootDict_171_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIsHit",769,G__WCLRootDict_171_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProcessStart",1549,G__WCLRootDict_171_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParentID",1047,G__WCLRootDict_171_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackID",930,G__WCLRootDict_171_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCaptureNum",1316,G__WCLRootDict_171_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPMTID",670,G__WCLRootDict_171_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPolarization1",1613,G__WCLRootDict_171_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPolarization2",1614,G__WCLRootDict_171_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert2Reco",1180,G__WCLRootDict_171_0_20, 85, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_171_0_21, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimTrueLight::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_171_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueLight::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_171_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimTrueLight::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_171_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimTrueLight::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_171_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_171_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueLight::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_171_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTrueLight::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_171_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueLight::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_171_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTrueLight::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimTrueLight", 1371, G__WCLRootDict_171_0_33, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight), -1, 0, 1, 1, 1, 0, "u 'WCSimTrueLight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimTrueLight", 1497, G__WCLRootDict_171_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_171_0_35, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight), -1, 1, 1, 1, 1, 0, "u 'WCSimTrueLight' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimTruePart(void) {
   /* WCSimTruePart */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart));
   G__memfunc_setup("WCSimTruePart",1274,G__WCLRootDict_172_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart), -1, 0, 21, 1, 1, 0, 
"d - 'Double_t' 0 - xs d - 'Double_t' 0 - ys "
"d - 'Double_t' 0 - zs d - 'Double_t' 0 - ts "
"d - 'Double_t' 0 - xe d - 'Double_t' 0 - ye "
"d - 'Double_t' 0 - ze d - 'Double_t' 0 - te "
"d - 'Double_t' 0 - pxs d - 'Double_t' 0 - pys "
"d - 'Double_t' 0 - pzs d - 'Double_t' 0 - pxe "
"d - 'Double_t' 0 - pye d - 'Double_t' 0 - pze "
"d - 'Double_t' 0 - kes d - 'Double_t' 0 - kee "
"i - 'Int_t' 0 - processs i - 'Int_t' 0 - processe "
"i - 'Int_t' 0 - parentID i - 'Int_t' 0 - trackID "
"i - 'Int_t' 0 - PID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXstart",934,G__WCLRootDict_172_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYstart",935,G__WCLRootDict_172_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZstart",936,G__WCLRootDict_172_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTstart",930,G__WCLRootDict_172_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXend",687,G__WCLRootDict_172_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYend",688,G__WCLRootDict_172_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZend",689,G__WCLRootDict_172_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTend",683,G__WCLRootDict_172_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPXstart",1014,G__WCLRootDict_172_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPYstart",1015,G__WCLRootDict_172_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPZstart",1016,G__WCLRootDict_172_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPXend",767,G__WCLRootDict_172_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPYend",768,G__WCLRootDict_172_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPZend",769,G__WCLRootDict_172_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKEstart",990,G__WCLRootDict_172_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKEend",743,G__WCLRootDict_172_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProcessStart",1549,G__WCLRootDict_172_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProcessEnd",1302,G__WCLRootDict_172_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParentID",1047,G__WCLRootDict_172_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackID",930,G__WCLRootDict_172_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPID",509,G__WCLRootDict_172_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert2Reco",1180,G__WCLRootDict_172_0_23, 85, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimRecoDigit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_172_0_24, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimTruePart::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_172_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTruePart::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_172_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimTruePart::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_172_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimTruePart::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_172_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_172_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTruePart::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_172_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTruePart::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_172_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTruePart::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_172_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTruePart::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimTruePart", 1274, G__WCLRootDict_172_0_36, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart), -1, 0, 1, 1, 1, 0, "u 'WCSimTruePart' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimTruePart", 1400, G__WCLRootDict_172_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_172_0_38, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart), -1, 1, 1, 1, 1, 0, "u 'WCSimTruePart' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimTrueCapture(void) {
   /* WCSimTrueCapture */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture));
   G__memfunc_setup("WCSimTrueCapture",1591,G__WCLRootDict_173_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture), -1, 0, 10, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - t "
"d - 'Double_t' 0 - E i - 'Int_t' 0 - capnum "
"i - 'Int_t' 0 - capnuc i - 'Int_t' 0 - pid "
"i - 'Int_t' 0 - ngamma i - 'Int_t' 0 - nphot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__WCLRootDict_173_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__WCLRootDict_173_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__WCLRootDict_173_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT",372,G__WCLRootDict_173_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetE",357,G__WCLRootDict_173_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCaptNum",984,G__WCLRootDict_173_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCaptNucleus",1415,G__WCLRootDict_173_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNGamma",849,G__WCLRootDict_173_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNPhot",777,G__WCLRootDict_173_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPID",509,G__WCLRootDict_173_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_173_0_12, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimTrueCapture::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_173_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueCapture::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_173_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimTrueCapture::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_173_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimTrueCapture::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_173_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_173_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueCapture::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_173_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTrueCapture::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_173_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimTrueCapture::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_173_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimTrueCapture::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimTrueCapture", 1591, G__WCLRootDict_173_0_24, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture), -1, 0, 1, 1, 1, 0, "u 'WCSimTrueCapture' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimTrueCapture", 1717, G__WCLRootDict_173_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_173_0_26, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture), -1, 1, 1, 1, 1, 0, "u 'WCSimTrueCapture' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCLTreeReader(void) {
   /* WCLTreeReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader));
   G__memfunc_setup("TouchData",893,G__WCLRootDict_505_0_1, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TouchEvent",1029,G__WCLRootDict_505_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__WCLRootDict_505_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadData",762,G__WCLRootDict_505_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - dfile C - - 10 - gfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadEvent",898,G__WCLRootDict_505_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ievent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventBranchAddys",1905,G__WCLRootDict_505_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - iS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGenBranchAddys",1673,G__WCLRootDict_505_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPMTBranchAddys",1632,G__WCLRootDict_505_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadPMT",625,G__WCLRootDict_505_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - iPMT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_nphot",968,G__WCLRootDict_505_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_nhits",965,G__WCLRootDict_505_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_npart",964,G__WCLRootDict_505_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_xStart",1599,G__WCLRootDict_505_0_13, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_yStart",1600,G__WCLRootDict_505_0_14, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_zStart",1601,G__WCLRootDict_505_0_15, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_tStart",1595,G__WCLRootDict_505_0_16, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_xEnd",1352,G__WCLRootDict_505_0_17, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_yEnd",1353,G__WCLRootDict_505_0_18, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_zEnd",1354,G__WCLRootDict_505_0_19, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_tEnd",1348,G__WCLRootDict_505_0_20, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_wavelength",2030,G__WCLRootDict_505_0_21, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_processStart",2246,G__WCLRootDict_505_0_22, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_parentid",1808,G__WCLRootDict_505_0_23, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_trackid",1691,G__WCLRootDict_505_0_24, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_isScat",1568,G__WCLRootDict_505_0_25, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_hit",1278,G__WCLRootDict_505_0_26, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_capnum",1597,G__WCLRootDict_505_0_27, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phot_PMTid",1399,G__WCLRootDict_505_0_28, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_xStart",1595,G__WCLRootDict_505_0_29, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_yStart",1596,G__WCLRootDict_505_0_30, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_zStart",1597,G__WCLRootDict_505_0_31, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_tStart",1591,G__WCLRootDict_505_0_32, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_xEnd",1348,G__WCLRootDict_505_0_33, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_yEnd",1349,G__WCLRootDict_505_0_34, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_zEnd",1350,G__WCLRootDict_505_0_35, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_tEnd",1344,G__WCLRootDict_505_0_36, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_pxStart",1707,G__WCLRootDict_505_0_37, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_pyStart",1708,G__WCLRootDict_505_0_38, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_pzStart",1709,G__WCLRootDict_505_0_39, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_KEstart",1651,G__WCLRootDict_505_0_40, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_pxEnd",1460,G__WCLRootDict_505_0_41, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_pyEnd",1461,G__WCLRootDict_505_0_42, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_pzEnd",1462,G__WCLRootDict_505_0_43, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_KEend",1404,G__WCLRootDict_505_0_44, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_processStart",2242,G__WCLRootDict_505_0_45, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_processEnd",1995,G__WCLRootDict_505_0_46, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_parentid",1804,G__WCLRootDict_505_0_47, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_trackid",1687,G__WCLRootDict_505_0_48, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_part_pid",1266,G__WCLRootDict_505_0_49, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_neutroncount",1747,G__WCLRootDict_505_0_50, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_ncapturecount",1834,G__WCLRootDict_505_0_51, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_x",1054,G__WCLRootDict_505_0_52, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_y",1055,G__WCLRootDict_505_0_53, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_z",1056,G__WCLRootDict_505_0_54, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_t0",1098,G__WCLRootDict_505_0_55, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_E",1003,G__WCLRootDict_505_0_56, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_num",1270,G__WCLRootDict_505_0_57, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_nucleus",1701,G__WCLRootDict_505_0_58, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_pid",1251,G__WCLRootDict_505_0_59, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_nphot",1487,G__WCLRootDict_505_0_60, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_capt_ngamma",1559,G__WCLRootDict_505_0_61, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genntrks",1291,G__WCLRootDict_505_0_62, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genmode",1150,G__WCLRootDict_505_0_63, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genbeam_id",1434,G__WCLRootDict_505_0_64, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_gennneutrons",1733,G__WCLRootDict_505_0_65, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genevt",1064,G__WCLRootDict_505_0_66, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genvtxx",1203,G__WCLRootDict_505_0_67, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genvtxy",1204,G__WCLRootDict_505_0_68, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genvtxz",1205,G__WCLRootDict_505_0_69, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genE",798,G__WCLRootDict_505_0_70, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genbeam_px",1461,G__WCLRootDict_505_0_71, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genbeam_py",1462,G__WCLRootDict_505_0_72, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genbeam_pz",1463,G__WCLRootDict_505_0_73, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genpid",1046,G__WCLRootDict_505_0_74, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genpx",961,G__WCLRootDict_505_0_75, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genpy",962,G__WCLRootDict_505_0_76, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genpz",963,G__WCLRootDict_505_0_77, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_genKE",873,G__WCLRootDict_505_0_78, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_nMRDlayers",1408,G__WCLRootDict_505_0_79, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDtotEdep",1367,G__WCLRootDict_505_0_80, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDtotEcgdep",1569,G__WCLRootDict_505_0_81, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDhitlayer",1508,G__WCLRootDict_505_0_82, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDhitorientation",2163,G__WCLRootDict_505_0_83, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDhitEdep",1349,G__WCLRootDict_505_0_84, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDhitEchdep",1552,G__WCLRootDict_505_0_85, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDhitx",1087,G__WCLRootDict_505_0_86, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDhity",1088,G__WCLRootDict_505_0_87, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_MRDhitz",1089,G__WCLRootDict_505_0_88, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_PMTid",861,G__WCLRootDict_505_0_89, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_PMTx",776,G__WCLRootDict_505_0_90, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_PMTy",777,G__WCLRootDict_505_0_91, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_PMTz",778,G__WCLRootDict_505_0_92, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_PMTsize",1099,G__WCLRootDict_505_0_93, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_PMTqe",870,G__WCLRootDict_505_0_94, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_PMTtimeRes",1385,G__WCLRootDict_505_0_95, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_IsLAPPD",972,G__WCLRootDict_505_0_96, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_hitPMTid",1186,G__WCLRootDict_505_0_97, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_hitTime",1139,G__WCLRootDict_505_0_98, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_hitX",828,G__WCLRootDict_505_0_99, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_hitY",829,G__WCLRootDict_505_0_100, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_hitZ",830,G__WCLRootDict_505_0_101, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhot",731,G__WCLRootDict_505_0_102, 85, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueLight), -1, 0, 1, 1, 1, 0, "i - - 0 - ip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPart",727,G__WCLRootDict_505_0_103, 85, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTruePart), -1, 0, 1, 1, 1, 0, "i - - 0 - ip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCapt",712,G__WCLRootDict_505_0_104, 85, G__get_linked_tagnum(&G__WCLRootDictLN_WCSimTrueCapture), -1, 0, 1, 1, 1, 0, "i - - 0 - ic", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__WCLRootDict_505_0_105, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNpmts",818,G__WCLRootDict_505_0_106, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCLTreeReader",1225,G__WCLRootDict_505_0_107, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader), -1, 0, 2, 1, 1, 0, 
"i - - 0 - filetype i - - 0 - includegen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetForNewSample",1718,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_505_0_109, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCLTreeReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_505_0_110, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCLTreeReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_505_0_111, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCLTreeReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_505_0_112, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCLTreeReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_505_0_116, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_505_0_117, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCLTreeReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_505_0_118, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCLTreeReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_505_0_119, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCLTreeReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_505_0_120, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCLTreeReader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCLTreeReader", 1225, G__WCLRootDict_505_0_121, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader), -1, 0, 1, 1, 1, 0, "u 'WCLTreeReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCLTreeReader", 1351, G__WCLRootDict_505_0_122, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_505_0_123, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeReader), -1, 1, 1, 1, 1, 0, "u 'WCLTreeReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCLTreeWriter(void) {
   /* WCLTreeWriter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter));
   G__memfunc_setup("WCLTreeWriter",1267,G__WCLRootDict_541_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - filename i - - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPMTBranchAddys",1632,G__WCLRootDict_541_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutBranchAddys",1703,G__WCLRootDict_541_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFlatBranchAddys",1782,G__WCLRootDict_541_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__WCLRootDict_541_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InputEvent",1042,G__WCLRootDict_541_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCLTreeReader' - 0 - fEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeEvent",1556,G__WCLRootDict_541_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddWholeBranches",1582,G__WCLRootDict_541_0_8, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'WCLTreeReader' - 0 - fEvent i - - 0 - addphot "
"i - - 0 - addpart i - - 0 - addcapt "
"i - - 0 - addmrd i - - 0 - addgen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPhoton",897,G__WCLRootDict_541_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'WCSimTrueLight' - 0 - fPhot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPMT",506,G__WCLRootDict_541_0_10, 121, -1, -1, 0, 8, 1, 1, 0, 
"i - - 0 - id d - - 0 - x "
"d - - 0 - y d - - 0 - z "
"d - - 0 - size d - - 0 - qe "
"d - - 0 - tRes i - - 0 - isLAPPD", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHit",558,G__WCLRootDict_541_0_11, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 - time d - - 0 - x "
"d - - 0 - y d - - 0 - z "
"i - - 0 - pmtId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillEvent",905,G__WCLRootDict_541_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTreeToFile",1502,G__WCLRootDict_541_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InputEventContents",1888,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 7, 1, 4, 0, 
"U 'WCLTreeReader' - 0 - fEvent i - - 0 - whole_event "
"i - - 0 - addphot i - - 0 - addpart "
"i - - 0 - addcapt i - - 0 - addmrd "
"i - - 0 - addgen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetForNewSample",1718,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_541_0_16, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCLTreeWriter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_541_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCLTreeWriter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_541_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCLTreeWriter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_541_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCLTreeWriter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_541_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_541_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCLTreeWriter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_541_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCLTreeWriter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_541_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCLTreeWriter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_541_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCLTreeWriter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCLTreeWriter", 1267, G__WCLRootDict_541_0_28, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter), -1, 0, 1, 1, 1, 0, "u 'WCLTreeWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCLTreeWriter", 1393, G__WCLRootDict_541_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_541_0_30, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WCLTreeWriter), -1, 1, 1, 1, 1, 0, "u 'WCLTreeWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWChRecoLite(void) {
   /* WChRecoLite */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_WChRecoLite));
   G__memfunc_setup("Instance",821,G__WCLRootDict_624_0_1, 85, G__get_linked_tagnum(&G__WCLRootDictLN_WChRecoLite), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (WChRecoLite* (*)())(&WChRecoLite::Instance) ), 0);
   G__memfunc_setup("FindVertex",1023,G__WCLRootDict_624_0_2, 105, -1, G__defined_typename("Int_t"), 0, 24, 1, 1, 0, 
"d - 'Double_t' 0 - x0 d - 'Double_t' 0 - y0 "
"d - 'Double_t' 0 - z0 d - 'Double_t' 0 - t0 "
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - z1 d - 'Double_t' 0 - t1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2 "
"d - 'Double_t' 0 - z2 d - 'Double_t' 0 - t2 "
"d - 'Double_t' 0 - x3 d - 'Double_t' 0 - y3 "
"d - 'Double_t' 0 - z3 d - 'Double_t' 0 - t3 "
"d - 'Double_t' 1 - vxm d - 'Double_t' 1 - vym "
"d - 'Double_t' 1 - vzm d - 'Double_t' 1 - vtm "
"d - 'Double_t' 1 - vxp d - 'Double_t' 1 - vyp "
"d - 'Double_t' 1 - vzp d - 'Double_t' 1 - vtp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChooseNextDigit",1521,G__WCLRootDict_624_0_3, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"d - 'Double_t' 1 - xpos d - 'Double_t' 1 - ypos "
"d - 'Double_t' 1 - zpos d - 'Double_t' 1 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChooseNextQuadruple",1971,G__WCLRootDict_624_0_4, 105, -1, G__defined_typename("Int_t"), 0, 16, 1, 1, 0, 
"d - 'Double_t' 1 - x0 d - 'Double_t' 1 - y0 "
"d - 'Double_t' 1 - z0 d - 'Double_t' 1 - t0 "
"d - 'Double_t' 1 - x1 d - 'Double_t' 1 - y1 "
"d - 'Double_t' 1 - z1 d - 'Double_t' 1 - t1 "
"d - 'Double_t' 1 - x2 d - 'Double_t' 1 - y2 "
"d - 'Double_t' 1 - z2 d - 'Double_t' 1 - t2 "
"d - 'Double_t' 1 - x3 d - 'Double_t' 1 - y3 "
"d - 'Double_t' 1 - z3 d - 'Double_t' 1 - t3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcVertexSeeds",1509,G__WCLRootDict_624_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Amotry",636,G__WCLRootDict_624_0_6, 100, -1, -1, 0, 6, 1, 1, 0, 
"D - - 2 - p D - - 0 - y "
"i - - 0 - ndim D - - 0 - psum "
"i - - 10 - ihi d - - 10 - fac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Amoeba",581,G__WCLRootDict_624_0_7, 121, -1, -1, 0, 5, 1, 1, 0, 
"D - - 2 - p D - - 0 - y "
"i - - 0 - ndim d - - 10 - ftol "
"i - - 1 - nfunk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MeanVertexSeed",1408,G__WCLRootDict_624_0_8, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TimePropertiesLnL",1730,G__WCLRootDict_624_0_9, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"d - - 1 - vtx_time d - - 1 - fom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitPointTimePropertiesLnL",2543,G__WCLRootDict_624_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - fit_time d - 'Double_t' 1 - fom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectBestSeed",1391,G__WCLRootDict_624_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WeightedSumSeed",1511,G__WCLRootDict_624_0_12, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - xyz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP",368,G__WCLRootDict_624_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 2 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSumVtx",919,G__WCLRootDict_624_0_14, 100, -1, -1, 0, 1, 1, 1, 0, "D - - 0 - vertex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeedVtx",995,G__WCLRootDict_624_0_15, 117, G__get_linked_tagnum(&G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "i - - 0 - wvert", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDigits",912,G__WCLRootDict_624_0_16, 121, -1, -1, 0, 10, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 0 - iDigitX u 'vector<double,allocator<double> >' 'vector<double>' 0 - iDigitY "
"u 'vector<double,allocator<double> >' 'vector<double>' 0 - iDigitZ u 'vector<double,allocator<double> >' 'vector<double>' 0 - iDigitT "
"u 'vector<double,allocator<double> >' 'vector<double>' 0 - iDigitQ u 'vector<double,allocator<double> >' 'vector<double>' 0 - iDigitPE "
"u 'vector<double,allocator<double> >' 'vector<double>' 0 - iDigitW u 'vector<double,allocator<double> >' 'vector<double>' 0 - iDigitV "
"u 'vector<double,allocator<double> >' 'vector<double>' 0 - iDelta u 'vector<int,allocator<int> >' 'vector<int>' 0 - iSeedDigitList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WChRecoLite",1049,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__WCLRootDictLN_WChRecoLite), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_624_0_19, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WChRecoLite::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_624_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WChRecoLite::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_624_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WChRecoLite::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_624_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WChRecoLite::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_624_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_624_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WChRecoLite::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_624_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WChRecoLite::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_624_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WChRecoLite::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_624_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WChRecoLite::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WChRecoLite", 1049, G__WCLRootDict_624_0_31, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_WChRecoLite), -1, 0, 1, 1, 1, 0, "u 'WChRecoLite' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_624_0_32, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_WChRecoLite), -1, 1, 1, 1, 1, 0, "u 'WChRecoLite' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHighEReco(void) {
   /* HighEReco */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_HighEReco));
   G__memfunc_setup("HighEReco",846,G__WCLRootDict_645_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_HighEReco), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRings",900,G__WCLRootDict_645_0_2, 105, -1, -1, 0, 10, 1, 1, 0, 
"d - - 0 - vtxX d - - 0 - vtxY "
"d - - 0 - vtxZ d - - 0 - vtxT "
"D - - 0 - thetaPeaks D - - 0 - phiPeaks "
"I - - 0 - ringPEs i - - 0 - maxRings "
"g - - 0 'true' useTrack D - - 0 '0' hough", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTracks",1001,G__WCLRootDict_645_0_3, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TH3D), -1, 0, 3, 1, 1, 0, 
"d - - 0 - vtxX d - - 0 - vtxY "
"d - - 0 - vtxZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PointFit",813,G__WCLRootDict_645_0_4, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - - 1 - recoVtxX d - - 1 - recoVtxY "
"d - - 1 - recoVtxZ d - - 1 - recoT "
"d - - 1 - cherenkovAngle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackFit",792,G__WCLRootDict_645_0_5, 121, -1, -1, 0, 8, 1, 1, 0, 
"d - - 1 - recoVtxX d - - 1 - recoVtxY "
"d - - 1 - recoVtxZ d - - 1 - recoT "
"d - - 1 - recoDirPhi d - - 1 - recoDirTheta "
"d - - 1 - recoDirCosTheta d - - 1 - cherenkovAngle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LikelihoodFit",1319,G__WCLRootDict_645_0_6, 121, -1, -1, 0, 10, 1, 1, 0, 
"d - - 1 - trackCorrection d - - 1 - recoVtxX "
"d - - 1 - recoVtxY d - - 1 - recoVtxZ "
"d - - 1 - recoT d - - 1 - recoDirPhi "
"d - - 1 - recoDirTheta d - - 1 - recoKE "
"d - - 1 - recoLnL i - - 0 - ipnu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PointBadness",1226,G__WCLRootDict_645_0_7, 100, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackBadness",1205,G__WCLRootDict_645_0_8, 100, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackGoodness",1335,G__WCLRootDict_645_0_9, 100, -1, -1, 0, 3, 1, 1, 0, 
"D - - 10 - par i - - 0 '0' ring "
"d - - 0 '1' factor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ElectronLnLikelihood",2042,G__WCLRootDict_645_0_10, 100, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MuonLnLikelihood",1629,G__WCLRootDict_645_0_11, 100, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FullTimeOfFlight",1589,G__WCLRootDict_645_0_12, 100, -1, -1, 0, 8, 1, 1, 0, 
"d - - 0 - vtxX d - - 0 - vtxY "
"d - - 0 - vtxZ d - - 0 - dirX "
"d - - 0 - dirY d - - 0 - dirZ "
"i - - 0 - pmt d - - 0 - cherenkovAngle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExpectedPMTPhotoelectrons",2556,G__WCLRootDict_645_0_13, 100, -1, -1, 0, 11, 1, 1, 0, 
"d - - 0 - vtxX d - - 0 - vtxY "
"d - - 0 - vtxZ d - - 0 - dirX "
"d - - 0 - dirY d - - 0 - dirZ "
"i - - 0 - pmt g - - 0 - isHit "
"d - - 0 - kineticEnergy i - - 0 - ipnu "
"D - - 0 '0' expectedTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Goodness",834,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 4, 1, 4, 0, 
"D - - 10 - timesOfFlight d - - 0 '-1000' time "
"d - - 0 '1' factor i - - 0 '0' ring", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PointTimeOfFlight",1708,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 4, 1, 4, 0, 
"d - - 0 - vtxX d - - 0 - vtxY "
"d - - 0 - vtxZ i - - 0 - pmt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PointChkvAngle",1405,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 7, 1, 4, 0, 
"d - - 0 - vtxX d - - 0 - vtxY "
"d - - 0 - vtxZ d - - 0 - dirX "
"d - - 0 - dirY d - - 0 - dirZ "
"i - - 0 - pmt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackChkvAngle",1384,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 8, 1, 4, 0, 
"d - - 0 - vtxX d - - 0 - vtxY "
"d - - 0 - vtxZ d - - 0 - dirX "
"d - - 0 - dirY d - - 0 - dirZ "
"i - - 0 - pmt d - - 0 - tof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PMTlnLikelihood",1487,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 10, 1, 4, 0, 
"d - - 0 - vtxX d - - 0 - vtxY "
"d - - 0 - vtxZ d - - 0 - dirX "
"d - - 0 - dirY d - - 0 - dirZ "
"i - - 0 - pmt g - - 0 - isHit "
"d - - 0 - kineticEnergy i - - 0 - ipnu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LnLikelihood",1214,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 4, 1, 4, 0, 
"D - - 10 - par i - - 0 - ipnu "
"g - - 0 - total g - - 0 - print", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ElectronLnLikelihoodTotal",2558,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 0, "D - - 10 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MuonLnLikelihoodTotal",2145,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 0, "D - - 10 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRing",785,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 9, 1, 4, 0, 
"d - - 0 - vtxX d - - 0 - vtxY "
"d - - 0 - vtxZ d - - 0 - vtxT "
"d - - 1 - thetaPeak d - - 1 - phiPeak "
"i - - 0 '0' ringNumber g - - 0 'true' useTrack "
"D - - 0 '0' hough", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_645_0_23, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HighEReco::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_645_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HighEReco::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_645_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HighEReco::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_645_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HighEReco::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_645_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_645_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HighEReco::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_645_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HighEReco::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_645_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HighEReco::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_645_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HighEReco::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HighEReco", 846, G__WCLRootDict_645_0_35, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_HighEReco), -1, 0, 1, 1, 1, 0, "u 'HighEReco' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HighEReco", 972, G__WCLRootDict_645_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_645_0_37, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_HighEReco), -1, 1, 1, 1, 1, 0, "u 'HighEReco' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLowEReco(void) {
   /* LowEReco */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_LowEReco));
   G__memfunc_setup("LowEReco",768,G__WCLRootDict_646_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_LowEReco), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReconstructEnergy",1798,G__WCLRootDict_646_0_2, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - nphot D - 'Double_t' 10 - phot_xEnd "
"D - 'Double_t' 10 - phot_yEnd D - 'Double_t' 10 - phot_zEnd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoLowEReco",947,G__WCLRootDict_646_0_3, 121, -1, -1, 0, 14, 1, 1, 0, 
"i - - 0 - evt i - - 0 - nhits "
"D - - 0 - hitx D - - 0 - hity "
"D - - 0 - hitz D - - 0 - hitt "
"d - - 0 - allrecoang d - - 1 - recoVtxX "
"d - - 1 - recoVtxY d - - 1 - recoVtxZ "
"d - - 1 - recoVtxTime d - - 1 - reconstructedDirX "
"d - - 1 - reconstructedDirY d - - 1 - reconstructedDirZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCLRootDict_646_0_4, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LowEReco::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_646_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LowEReco::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_646_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LowEReco::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_646_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LowEReco::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_646_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_646_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LowEReco::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_646_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LowEReco::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_646_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LowEReco::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_646_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LowEReco::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LowEReco", 768, G__WCLRootDict_646_0_16, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_LowEReco), -1, 0, 1, 1, 1, 0, "u 'LowEReco' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LowEReco", 894, G__WCLRootDict_646_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_646_0_18, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_LowEReco), -1, 1, 1, 1, 1, 0, "u 'LowEReco' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLikelihoodGenerator(void) {
   /* LikelihoodGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCLRootDictLN_LikelihoodGenerator));
   G__memfunc_setup("LikelihoodGenerator",1963,G__WCLRootDict_659_0_1, 105, G__get_linked_tagnum(&G__WCLRootDictLN_LikelihoodGenerator), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LikelihoodGenerator",1963,G__WCLRootDict_659_0_2, 105, G__get_linked_tagnum(&G__WCLRootDictLN_LikelihoodGenerator), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cut",300,G__WCLRootDict_659_0_3, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEntry",818,G__WCLRootDict_659_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadTree",784,G__WCLRootDict_659_0_5, 110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,G__WCLRootDict_659_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Loop",410,G__WCLRootDict_659_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"g - - 0 'false' isElectron i - - 0 '0' start "
"i - - 0 '0' end", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Loop2",460,G__WCLRootDict_659_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' start i - - 0 '0' end", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Loop3",461,G__WCLRootDict_659_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' start i - - 0 '0' end", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Show",417,G__WCLRootDict_659_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 '-1' entry", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__WCLRootDict_659_0_12, 85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LikelihoodGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCLRootDict_659_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LikelihoodGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCLRootDict_659_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LikelihoodGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCLRootDict_659_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LikelihoodGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCLRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCLRootDict_659_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCLRootDict_659_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LikelihoodGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCLRootDict_659_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LikelihoodGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCLRootDict_659_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LikelihoodGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCLRootDict_659_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LikelihoodGenerator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LikelihoodGenerator", 1963, G__WCLRootDict_659_0_24, (int) ('i'), G__get_linked_tagnum(&G__WCLRootDictLN_LikelihoodGenerator), -1, 0, 1, 1, 1, 0, "u 'LikelihoodGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LikelihoodGenerator", 2089, G__WCLRootDict_659_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCLRootDict_659_0_26, (int) ('u'), G__get_linked_tagnum(&G__WCLRootDictLN_LikelihoodGenerator), -1, 1, 1, 1, 1, 0, "u 'LikelihoodGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncWCLRootDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalWCLRootDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcWCLRootDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__WCLRootDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR = { "basic_fstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WCSimRecoObjectTable = { "WCSimRecoObjectTable" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WCSimRecoDigit = { "WCSimRecoDigit" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_SandBoxPMTcoverage = { "SandBoxPMTcoverage" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WCSimTrueLight = { "WCSimTrueLight" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WCSimTruePart = { "WCSimTruePart" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WCSimTrueCapture = { "WCSimTrueCapture" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__WCLRootDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WCLTreeReader = { "WCLTreeReader" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WCLTreeWriter = { "WCLTreeWriter" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TRandom = { "TRandom" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_WChRecoLite = { "WChRecoLite" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR = { "map<int,double,less<int>,allocator<pair<const int,double> > >" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_TH3D = { "TH3D" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_HighEReco = { "HighEReco" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_LowEReco = { "LowEReco" , 99 , -1 };
G__linked_taginfo G__WCLRootDictLN_LikelihoodGenerator = { "LikelihoodGenerator" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableWCLRootDict() {
  G__WCLRootDictLN_TClass.tagnum = -1 ;
  G__WCLRootDictLN_TBuffer.tagnum = -1 ;
  G__WCLRootDictLN_TMemberInspector.tagnum = -1 ;
  G__WCLRootDictLN_TObject.tagnum = -1 ;
  G__WCLRootDictLN_TString.tagnum = -1 ;
  G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__WCLRootDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__WCLRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__WCLRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCLRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__WCLRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCLRootDictLN_WCSimRecoObjectTable.tagnum = -1 ;
  G__WCLRootDictLN_WCSimRecoDigit.tagnum = -1 ;
  G__WCLRootDictLN_SandBoxPMTcoverage.tagnum = -1 ;
  G__WCLRootDictLN_WCSimTrueLight.tagnum = -1 ;
  G__WCLRootDictLN_WCSimTruePart.tagnum = -1 ;
  G__WCLRootDictLN_WCSimTrueCapture.tagnum = -1 ;
  G__WCLRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__WCLRootDictLN_TTree.tagnum = -1 ;
  G__WCLRootDictLN_TFile.tagnum = -1 ;
  G__WCLRootDictLN_TBranch.tagnum = -1 ;
  G__WCLRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__WCLRootDictLN_TChain.tagnum = -1 ;
  G__WCLRootDictLN_WCLTreeReader.tagnum = -1 ;
  G__WCLRootDictLN_WCLTreeWriter.tagnum = -1 ;
  G__WCLRootDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__WCLRootDictLN_TRandom.tagnum = -1 ;
  G__WCLRootDictLN_WChRecoLite.tagnum = -1 ;
  G__WCLRootDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__WCLRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCLRootDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__WCLRootDictLN_TH2D.tagnum = -1 ;
  G__WCLRootDictLN_TH3D.tagnum = -1 ;
  G__WCLRootDictLN_HighEReco.tagnum = -1 ;
  G__WCLRootDictLN_LowEReco.tagnum = -1 ;
  G__WCLRootDictLN_LikelihoodGenerator.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableWCLRootDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TString);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WCSimRecoObjectTable),sizeof(WCSimRecoObjectTable),-1,292096,(char*)NULL,G__setup_memvarWCSimRecoObjectTable,G__setup_memfuncWCSimRecoObjectTable);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WCSimRecoDigit),sizeof(WCSimRecoDigit),-1,324608,(char*)NULL,G__setup_memvarWCSimRecoDigit,G__setup_memfuncWCSimRecoDigit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_SandBoxPMTcoverage),sizeof(SandBoxPMTcoverage),-1,292096,(char*)NULL,G__setup_memvarSandBoxPMTcoverage,G__setup_memfuncSandBoxPMTcoverage);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WCSimTrueLight),sizeof(WCSimTrueLight),-1,324608,(char*)NULL,G__setup_memvarWCSimTrueLight,G__setup_memfuncWCSimTrueLight);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WCSimTruePart),sizeof(WCSimTruePart),-1,324608,(char*)NULL,G__setup_memvarWCSimTruePart,G__setup_memfuncWCSimTruePart);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WCSimTrueCapture),sizeof(WCSimTrueCapture),-1,324608,(char*)NULL,G__setup_memvarWCSimTrueCapture,G__setup_memfuncWCSimTrueCapture);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TChain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WCLTreeReader),sizeof(WCLTreeReader),-1,324608,(char*)NULL,G__setup_memvarWCLTreeReader,G__setup_memfuncWCLTreeReader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WCLTreeWriter),sizeof(WCLTreeWriter),-1,324608,(char*)NULL,G__setup_memvarWCLTreeWriter,G__setup_memfuncWCLTreeWriter);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TRandom);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_WChRecoLite),sizeof(WChRecoLite),-1,292096,(char*)NULL,G__setup_memvarWChRecoLite,G__setup_memfuncWChRecoLite);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TH2D);
   G__get_linked_tagnum_fwd(&G__WCLRootDictLN_TH3D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_HighEReco),sizeof(HighEReco),-1,292096,(char*)NULL,G__setup_memvarHighEReco,G__setup_memfuncHighEReco);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_LowEReco),sizeof(LowEReco),-1,292096,(char*)NULL,G__setup_memvarLowEReco,G__setup_memfuncLowEReco);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCLRootDictLN_LikelihoodGenerator),sizeof(LikelihoodGenerator),-1,324864,(char*)NULL,G__setup_memvarLikelihoodGenerator,G__setup_memfuncLikelihoodGenerator);
}
extern "C" void G__cpp_setupWCLRootDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupWCLRootDict()");
  G__set_cpp_environmentWCLRootDict();
  G__cpp_setup_tagtableWCLRootDict();

  G__cpp_setup_inheritanceWCLRootDict();

  G__cpp_setup_typetableWCLRootDict();

  G__cpp_setup_memvarWCLRootDict();

  G__cpp_setup_memfuncWCLRootDict();
  G__cpp_setup_globalWCLRootDict();
  G__cpp_setup_funcWCLRootDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncWCLRootDict();
  return;
}
class G__cpp_setup_initWCLRootDict {
  public:
    G__cpp_setup_initWCLRootDict() { G__add_setup_func("WCLRootDict",(G__incsetup)(&G__cpp_setupWCLRootDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initWCLRootDict() { G__remove_setup_func("WCLRootDict"); }
};
G__cpp_setup_initWCLRootDict G__cpp_setup_initializerWCLRootDict;

